var jt=Object.defineProperty;var xt=(e,r,t)=>r in e?jt(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var C=(e,r,t)=>xt(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();var ce,A,Mr,z,vr,Br,Se,Ne,Fe,Ce,Vr,ie={},zr=[],$t=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,fe=Array.isArray;function H(e,r){for(var t in r)e[t]=r[t];return e}function Kr(e){var r=e.parentNode;r&&r.removeChild(e)}function We(e,r,t){var s,o,i,a={};for(i in r)i=="key"?s=r[i]:i=="ref"?o=r[i]:a[i]=r[i];if(arguments.length>2&&(a.children=arguments.length>3?ce.call(arguments,2):t),typeof e=="function"&&e.defaultProps!=null)for(i in e.defaultProps)a[i]===void 0&&(a[i]=e.defaultProps[i]);return se(e,a,s,o,null)}function se(e,r,t,s,o){var i={type:e,props:r,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:o??++Mr,__i:-1,__u:0};return o==null&&A.vnode!=null&&A.vnode(i),i}function le(e){return e.children}function oe(e,r){this.props=e,this.context=r}function J(e,r){if(r==null)return e.__?J(e.__,e.__i+1):null;for(var t;r<e.__k.length;r++)if((t=e.__k[r])!=null&&t.__e!=null)return t.__e;return typeof e.type=="function"?J(e):null}function Qr(e){var r,t;if((e=e.__)!=null&&e.__c!=null){for(e.__e=e.__c.base=null,r=0;r<e.__k.length;r++)if((t=e.__k[r])!=null&&t.__e!=null){e.__e=e.__c.base=t.__e;break}return Qr(e)}}function Ue(e){(!e.__d&&(e.__d=!0)&&z.push(e)&&!me.__r++||vr!==A.debounceRendering)&&((vr=A.debounceRendering)||Br)(me)}function me(){var e,r,t,s,o,i,a,c;for(z.sort(Se);e=z.shift();)e.__d&&(r=z.length,s=void 0,i=(o=(t=e).__v).__e,a=[],c=[],t.__P&&((s=H({},o)).__v=o.__v+1,A.vnode&&A.vnode(s),He(t.__P,s,o,t.__n,t.__P.namespaceURI,32&o.__u?[i]:null,a,i??J(o),!!(32&o.__u),c),s.__v=o.__v,s.__.__k[s.__i]=s,Xr(a,s,c),s.__e!=i&&Qr(s)),z.length>r&&z.sort(Se));me.__r=0}function Jr(e,r,t,s,o,i,a,c,g,h,f){var l,y,E,G,R,w=s&&s.__k||zr,k=r.length;for(t.__d=g,qt(t,r,w),g=t.__d,l=0;l<k;l++)(E=t.__k[l])!=null&&typeof E!="boolean"&&typeof E!="function"&&(y=E.__i===-1?ie:w[E.__i]||ie,E.__i=l,He(e,E,y,o,i,a,c,g,h,f),G=E.__e,E.ref&&y.ref!=E.ref&&(y.ref&&Me(y.ref,null,E),f.push(E.ref,E.__c||G,E)),R==null&&G!=null&&(R=G),65536&E.__u||y.__k===E.__k?g=Yr(E,g,e):typeof E.type=="function"&&E.__d!==void 0?g=E.__d:G&&(g=G.nextSibling),E.__d=void 0,E.__u&=-196609);t.__d=g,t.__e=R}function qt(e,r,t){var s,o,i,a,c,g=r.length,h=t.length,f=h,l=0;for(e.__k=[],s=0;s<g;s++)a=s+l,(o=e.__k[s]=(o=r[s])==null||typeof o=="boolean"||typeof o=="function"?null:typeof o=="string"||typeof o=="number"||typeof o=="bigint"||o.constructor==String?se(null,o,null,null,null):fe(o)?se(le,{children:o},null,null,null):o.constructor===void 0&&o.__b>0?se(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o)!=null?(o.__=e,o.__b=e.__b+1,c=Nt(o,t,a,f),o.__i=c,i=null,c!==-1&&(f--,(i=t[c])&&(i.__u|=131072)),i==null||i.__v===null?(c==-1&&l--,typeof o.type!="function"&&(o.__u|=65536)):c!==a&&(c==a-1?l--:c==a+1?l++:c>a?f>g-a?l+=c-a:l--:c<a&&(c==a-l?l-=c-a:l++),c!==s+l&&(o.__u|=65536))):(i=t[a])&&i.key==null&&i.__e&&!(131072&i.__u)&&(i.__e==e.__d&&(e.__d=J(i)),Le(i,i,!1),t[a]=null,f--);if(f)for(s=0;s<h;s++)(i=t[s])!=null&&!(131072&i.__u)&&(i.__e==e.__d&&(e.__d=J(i)),Le(i,i))}function Yr(e,r,t){var s,o;if(typeof e.type=="function"){for(s=e.__k,o=0;s&&o<s.length;o++)s[o]&&(s[o].__=e,r=Yr(s[o],r,t));return r}e.__e!=r&&(r&&e.type&&!t.contains(r)&&(r=J(e)),t.insertBefore(e.__e,r||null),r=e.__e);do r=r&&r.nextSibling;while(r!=null&&r.nodeType===8);return r}function De(e,r){return r=r||[],e==null||typeof e=="boolean"||(fe(e)?e.some(function(t){De(t,r)}):r.push(e)),r}function Nt(e,r,t,s){var o=e.key,i=e.type,a=t-1,c=t+1,g=r[t];if(g===null||g&&o==g.key&&i===g.type&&!(131072&g.__u))return t;if(s>(g!=null&&!(131072&g.__u)?1:0))for(;a>=0||c<r.length;){if(a>=0){if((g=r[a])&&!(131072&g.__u)&&o==g.key&&i===g.type)return a;a--}if(c<r.length){if((g=r[c])&&!(131072&g.__u)&&o==g.key&&i===g.type)return c;c++}}return-1}function br(e,r,t){r[0]==="-"?e.setProperty(r,t??""):e[r]=t==null?"":typeof t!="number"||$t.test(r)?t:t+"px"}function pe(e,r,t,s,o){var i;e:if(r==="style")if(typeof t=="string")e.style.cssText=t;else{if(typeof s=="string"&&(e.style.cssText=s=""),s)for(r in s)t&&r in t||br(e.style,r,"");if(t)for(r in t)s&&t[r]===s[r]||br(e.style,r,t[r])}else if(r[0]==="o"&&r[1]==="n")i=r!==(r=r.replace(/(PointerCapture)$|Capture$/i,"$1")),r=r.toLowerCase()in e||r==="onFocusOut"||r==="onFocusIn"?r.toLowerCase().slice(2):r.slice(2),e.l||(e.l={}),e.l[r+i]=t,t?s?t.u=s.u:(t.u=Ne,e.addEventListener(r,i?Ce:Fe,i)):e.removeEventListener(r,i?Ce:Fe,i);else{if(o=="http://www.w3.org/2000/svg")r=r.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(r!="width"&&r!="height"&&r!="href"&&r!="list"&&r!="form"&&r!="tabIndex"&&r!="download"&&r!="rowSpan"&&r!="colSpan"&&r!="role"&&r!="popover"&&r in e)try{e[r]=t??"";break e}catch{}typeof t=="function"||(t==null||t===!1&&r[4]!=="-"?e.removeAttribute(r):e.setAttribute(r,r=="popover"&&t==1?"":t))}}function wr(e){return function(r){if(this.l){var t=this.l[r.type+e];if(r.t==null)r.t=Ne++;else if(r.t<t.u)return;return t(A.event?A.event(r):r)}}}function He(e,r,t,s,o,i,a,c,g,h){var f,l,y,E,G,R,w,k,P,$,L,q,I,W,M,B,x=r.type;if(r.constructor!==void 0)return null;128&t.__u&&(g=!!(32&t.__u),i=[c=r.__e=t.__e]),(f=A.__b)&&f(r);e:if(typeof x=="function")try{if(k=r.props,P="prototype"in x&&x.prototype.render,$=(f=x.contextType)&&s[f.__c],L=f?$?$.props.value:f.__:s,t.__c?w=(l=r.__c=t.__c).__=l.__E:(P?r.__c=l=new x(k,L):(r.__c=l=new oe(k,L),l.constructor=x,l.render=Ht),$&&$.sub(l),l.props=k,l.state||(l.state={}),l.context=L,l.__n=s,y=l.__d=!0,l.__h=[],l._sb=[]),P&&l.__s==null&&(l.__s=l.state),P&&x.getDerivedStateFromProps!=null&&(l.__s==l.state&&(l.__s=H({},l.__s)),H(l.__s,x.getDerivedStateFromProps(k,l.__s))),E=l.props,G=l.state,l.__v=r,y)P&&x.getDerivedStateFromProps==null&&l.componentWillMount!=null&&l.componentWillMount(),P&&l.componentDidMount!=null&&l.__h.push(l.componentDidMount);else{if(P&&x.getDerivedStateFromProps==null&&k!==E&&l.componentWillReceiveProps!=null&&l.componentWillReceiveProps(k,L),!l.__e&&(l.shouldComponentUpdate!=null&&l.shouldComponentUpdate(k,l.__s,L)===!1||r.__v===t.__v)){for(r.__v!==t.__v&&(l.props=k,l.state=l.__s,l.__d=!1),r.__e=t.__e,r.__k=t.__k,r.__k.forEach(function(V){V&&(V.__=r)}),q=0;q<l._sb.length;q++)l.__h.push(l._sb[q]);l._sb=[],l.__h.length&&a.push(l);break e}l.componentWillUpdate!=null&&l.componentWillUpdate(k,l.__s,L),P&&l.componentDidUpdate!=null&&l.__h.push(function(){l.componentDidUpdate(E,G,R)})}if(l.context=L,l.props=k,l.__P=e,l.__e=!1,I=A.__r,W=0,P){for(l.state=l.__s,l.__d=!1,I&&I(r),f=l.render(l.props,l.state,l.context),M=0;M<l._sb.length;M++)l.__h.push(l._sb[M]);l._sb=[]}else do l.__d=!1,I&&I(r),f=l.render(l.props,l.state,l.context),l.state=l.__s;while(l.__d&&++W<25);l.state=l.__s,l.getChildContext!=null&&(s=H(H({},s),l.getChildContext())),P&&!y&&l.getSnapshotBeforeUpdate!=null&&(R=l.getSnapshotBeforeUpdate(E,G)),Jr(e,fe(B=f!=null&&f.type===le&&f.key==null?f.props.children:f)?B:[B],r,t,s,o,i,a,c,g,h),l.base=r.__e,r.__u&=-161,l.__h.length&&a.push(l),w&&(l.__E=l.__=null)}catch(V){if(r.__v=null,g||i!=null){for(r.__u|=g?160:32;c&&c.nodeType===8&&c.nextSibling;)c=c.nextSibling;i[i.indexOf(c)]=null,r.__e=c}else r.__e=t.__e,r.__k=t.__k;A.__e(V,r,t)}else i==null&&r.__v===t.__v?(r.__k=t.__k,r.__e=t.__e):r.__e=Wt(t.__e,r,t,s,o,i,a,g,h);(f=A.diffed)&&f(r)}function Xr(e,r,t){r.__d=void 0;for(var s=0;s<t.length;s++)Me(t[s],t[++s],t[++s]);A.__c&&A.__c(r,e),e.some(function(o){try{e=o.__h,o.__h=[],e.some(function(i){i.call(o)})}catch(i){A.__e(i,o.__v)}})}function Wt(e,r,t,s,o,i,a,c,g){var h,f,l,y,E,G,R,w=t.props,k=r.props,P=r.type;if(P==="svg"?o="http://www.w3.org/2000/svg":P==="math"?o="http://www.w3.org/1998/Math/MathML":o||(o="http://www.w3.org/1999/xhtml"),i!=null){for(h=0;h<i.length;h++)if((E=i[h])&&"setAttribute"in E==!!P&&(P?E.localName===P:E.nodeType===3)){e=E,i[h]=null;break}}if(e==null){if(P===null)return document.createTextNode(k);e=document.createElementNS(o,P,k.is&&k),i=null,c=!1}if(P===null)w===k||c&&e.data===k||(e.data=k);else{if(i=i&&ce.call(e.childNodes),w=t.props||ie,!c&&i!=null)for(w={},h=0;h<e.attributes.length;h++)w[(E=e.attributes[h]).name]=E.value;for(h in w)if(E=w[h],h!="children"){if(h=="dangerouslySetInnerHTML")l=E;else if(h!=="key"&&!(h in k)){if(h=="value"&&"defaultValue"in k||h=="checked"&&"defaultChecked"in k)continue;pe(e,h,null,E,o)}}for(h in k)E=k[h],h=="children"?y=E:h=="dangerouslySetInnerHTML"?f=E:h=="value"?G=E:h=="checked"?R=E:h==="key"||c&&typeof E!="function"||w[h]===E||pe(e,h,E,w[h],o);if(f)c||l&&(f.__html===l.__html||f.__html===e.innerHTML)||(e.innerHTML=f.__html),r.__k=[];else if(l&&(e.innerHTML=""),Jr(e,fe(y)?y:[y],r,t,s,P==="foreignObject"?"http://www.w3.org/1999/xhtml":o,i,a,i?i[0]:t.__k&&J(t,0),c,g),i!=null)for(h=i.length;h--;)i[h]!=null&&Kr(i[h]);c||(h="value",G!==void 0&&(G!==e[h]||P==="progress"&&!G||P==="option"&&G!==w[h])&&pe(e,h,G,w[h],o),h="checked",R!==void 0&&R!==e[h]&&pe(e,h,R,w[h],o))}return e}function Me(e,r,t){try{if(typeof e=="function"){var s=typeof e.__u=="function";s&&e.__u(),s&&r==null||(e.__u=e(r))}else e.current=r}catch(o){A.__e(o,t)}}function Le(e,r,t){var s,o;if(A.unmount&&A.unmount(e),(s=e.ref)&&(s.current&&s.current!==e.__e||Me(s,null,r)),(s=e.__c)!=null){if(s.componentWillUnmount)try{s.componentWillUnmount()}catch(i){A.__e(i,r)}s.base=s.__P=null}if(s=e.__k)for(o=0;o<s.length;o++)s[o]&&Le(s[o],r,t||typeof e.type!="function");t||e.__e==null||Kr(e.__e),e.__c=e.__=e.__e=e.__d=void 0}function Ht(e,r,t){return this.constructor(e,t)}function Mt(e,r,t){var s,o,i,a;A.__&&A.__(e,r),o=(s=typeof t=="function")?null:r.__k,i=[],a=[],He(r,e=(!s&&t||r).__k=We(le,null,[e]),o||ie,ie,r.namespaceURI,!s&&t?[t]:o?null:r.firstChild?ce.call(r.childNodes):null,i,!s&&t?t:o?o.__e:r.firstChild,s,a),Xr(i,e,a)}function Bt(e,r,t){var s,o,i,a,c=H({},e.props);for(i in e.type&&e.type.defaultProps&&(a=e.type.defaultProps),r)i=="key"?s=r[i]:i=="ref"?o=r[i]:c[i]=r[i]===void 0&&a!==void 0?a[i]:r[i];return arguments.length>2&&(c.children=arguments.length>3?ce.call(arguments,2):t),se(e.type,c,s||e.key,o||e.ref,null)}function Vt(e,r){var t={__c:r="__cC"+Vr++,__:e,Consumer:function(s,o){return s.children(o)},Provider:function(s){var o,i;return this.getChildContext||(o=[],(i={})[r]=this,this.getChildContext=function(){return i},this.componentWillUnmount=function(){o=null},this.shouldComponentUpdate=function(a){this.props.value!==a.value&&o.some(function(c){c.__e=!0,Ue(c)})},this.sub=function(a){o.push(a);var c=a.componentWillUnmount;a.componentWillUnmount=function(){o&&o.splice(o.indexOf(a),1),c&&c.call(a)}}),s.children}};return t.Provider.__=t.Consumer.contextType=t}ce=zr.slice,A={__e:function(e,r,t,s){for(var o,i,a;r=r.__;)if((o=r.__c)&&!o.__)try{if((i=o.constructor)&&i.getDerivedStateFromError!=null&&(o.setState(i.getDerivedStateFromError(e)),a=o.__d),o.componentDidCatch!=null&&(o.componentDidCatch(e,s||{}),a=o.__d),a)return o.__E=o}catch(c){e=c}throw e}},Mr=0,oe.prototype.setState=function(e,r){var t;t=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=H({},this.state),typeof e=="function"&&(e=e(H({},t),this.props)),e&&H(t,e),e!=null&&this.__v&&(r&&this._sb.push(r),Ue(this))},oe.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),Ue(this))},oe.prototype.render=le,z=[],Br=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,Se=function(e,r){return e.__v.__b-r.__v.__b},me.__r=0,Ne=0,Fe=wr(!1),Ce=wr(!0),Vr=0;var zt=0;function b(e,r,t,s,o,i){r||(r={});var a,c,g=r;if("ref"in g)for(c in g={},r)c=="ref"?a=r[c]:g[c]=r[c];var h={type:e,props:g,key:t,ref:a,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--zt,__i:-1,__u:0,__source:o,__self:i};if(typeof e=="function"&&(a=e.defaultProps))for(c in a)g[c]===void 0&&(g[c]=a[c]);return A.vnode&&A.vnode(h),h}var ae,S,ye,yr,_e=0,Zr=[],F=A,kr=F.__b,Pr=F.__r,Gr=F.diffed,Or=F.__c,Rr=F.unmount,Ar=F.__;function Be(e,r){F.__h&&F.__h(S,e,_e||r),_e=0;var t=S.__H||(S.__H={__:[],__h:[]});return e>=t.__.length&&t.__.push({}),t.__[e]}function ke(e){return _e=1,Kt(tt,e)}function Kt(e,r,t){var s=Be(ae++,2);if(s.t=e,!s.__c&&(s.__=[tt(void 0,r),function(c){var g=s.__N?s.__N[0]:s.__[0],h=s.t(g,c);g!==h&&(s.__N=[h,s.__[1]],s.__c.setState({}))}],s.__c=S,!S.u)){var o=function(c,g,h){if(!s.__c.__H)return!0;var f=s.__c.__H.__.filter(function(y){return!!y.__c});if(f.every(function(y){return!y.__N}))return!i||i.call(this,c,g,h);var l=!1;return f.forEach(function(y){if(y.__N){var E=y.__[0];y.__=y.__N,y.__N=void 0,E!==y.__[0]&&(l=!0)}}),!(!l&&s.__c.props===c)&&(!i||i.call(this,c,g,h))};S.u=!0;var i=S.shouldComponentUpdate,a=S.componentWillUpdate;S.componentWillUpdate=function(c,g,h){if(this.__e){var f=i;i=void 0,o(c,g,h),i=f}a&&a.call(this,c,g,h)},S.shouldComponentUpdate=o}return s.__N||s.__}function et(e,r){var t=Be(ae++,3);!F.__s&&rt(t.__H,r)&&(t.__=e,t.i=r,S.__H.__h.push(t))}function Qt(e){return _e=5,Jt(function(){return{current:e}},[])}function Jt(e,r){var t=Be(ae++,7);return rt(t.__H,r)&&(t.__=e(),t.__H=r,t.__h=e),t.__}function Yt(){for(var e;e=Zr.shift();)if(e.__P&&e.__H)try{e.__H.__h.forEach(he),e.__H.__h.forEach(Ie),e.__H.__h=[]}catch(r){e.__H.__h=[],F.__e(r,e.__v)}}F.__b=function(e){S=null,kr&&kr(e)},F.__=function(e,r){e&&r.__k&&r.__k.__m&&(e.__m=r.__k.__m),Ar&&Ar(e,r)},F.__r=function(e){Pr&&Pr(e),ae=0;var r=(S=e.__c).__H;r&&(ye===S?(r.__h=[],S.__h=[],r.__.forEach(function(t){t.__N&&(t.__=t.__N),t.i=t.__N=void 0})):(r.__h.forEach(he),r.__h.forEach(Ie),r.__h=[],ae=0)),ye=S},F.diffed=function(e){Gr&&Gr(e);var r=e.__c;r&&r.__H&&(r.__H.__h.length&&(Zr.push(r)!==1&&yr===F.requestAnimationFrame||((yr=F.requestAnimationFrame)||Xt)(Yt)),r.__H.__.forEach(function(t){t.i&&(t.__H=t.i),t.i=void 0})),ye=S=null},F.__c=function(e,r){r.some(function(t){try{t.__h.forEach(he),t.__h=t.__h.filter(function(s){return!s.__||Ie(s)})}catch(s){r.some(function(o){o.__h&&(o.__h=[])}),r=[],F.__e(s,t.__v)}}),Or&&Or(e,r)},F.unmount=function(e){Rr&&Rr(e);var r,t=e.__c;t&&t.__H&&(t.__H.__.forEach(function(s){try{he(s)}catch(o){r=o}}),t.__H=void 0,r&&F.__e(r,t.__v))};var Sr=typeof requestAnimationFrame=="function";function Xt(e){var r,t=function(){clearTimeout(s),Sr&&cancelAnimationFrame(r),setTimeout(e)},s=setTimeout(t,100);Sr&&(r=requestAnimationFrame(t))}function he(e){var r=S,t=e.__c;typeof t=="function"&&(e.__c=void 0,t()),S=r}function Ie(e){var r=S;e.__c=e.__(),S=r}function rt(e,r){return!e||e.length!==r.length||r.some(function(t,s){return t!==e[s]})}function tt(e,r){return typeof r=="function"?r(e):r}var Zt={};function de(e,r){for(var t in r)e[t]=r[t];return e}function es(e,r,t){var s,o=/(?:\?([^#]*))?(#.*)?$/,i=e.match(o),a={};if(i&&i[1])for(var c=i[1].split("&"),g=0;g<c.length;g++){var h=c[g].split("=");a[decodeURIComponent(h[0])]=decodeURIComponent(h.slice(1).join("="))}e=je(e.replace(o,"")),r=je(r||"");for(var f=Math.max(e.length,r.length),l=0;l<f;l++)if(r[l]&&r[l].charAt(0)===":"){var y=r[l].replace(/(^:|[+*?]+$)/g,""),E=(r[l].match(/[+*?]+$/)||Zt)[0]||"",G=~E.indexOf("+"),R=~E.indexOf("*"),w=e[l]||"";if(!w&&!R&&(E.indexOf("?")<0||G)){s=!1;break}if(a[y]=decodeURIComponent(w),G||R){a[y]=e.slice(l).map(decodeURIComponent).join("/");break}}else if(r[l]!==e[l]){s=!1;break}return(t.default===!0||s!==!1)&&a}function rs(e,r){return e.rank<r.rank?1:e.rank>r.rank?-1:e.index-r.index}function ts(e,r){return e.index=r,e.rank=function(t){return t.props.default?0:je(t.props.path).map(ss).join("")}(e),e.props}function je(e){return e.replace(/(^\/+|\/+$)/g,"").split("/")}function ss(e){return e.charAt(0)==":"?1+"*+?".indexOf(e.charAt(e.length-1))||4:5}var os={},K=[],Fr=[],j=null,st={url:Ve()},ns=Vt(st);function Ve(){var e;return""+((e=j&&j.location?j.location:j&&j.getCurrentLocation?j.getCurrentLocation():typeof location<"u"?location:os).pathname||"")+(e.search||"")}function ot(e,r){return r===void 0&&(r=!1),typeof e!="string"&&e.url&&(r=e.replace,e=e.url),function(t){for(var s=K.length;s--;)if(K[s].canRoute(t))return!0;return!1}(e)&&function(t,s){s===void 0&&(s="push"),j&&j[s]?j[s](t):typeof history<"u"&&history[s+"State"]&&history[s+"State"](null,null,t)}(e,r?"replace":"push"),nt(e)}function nt(e){for(var r=!1,t=0;t<K.length;t++)K[t].routeTo(e)&&(r=!0);return r}function is(e){if(e&&e.getAttribute){var r=e.getAttribute("href"),t=e.getAttribute("target");if(r&&r.match(/^\//g)&&(!t||t.match(/^_?self$/i)))return ot(r)}}function as(e){return e.stopImmediatePropagation&&e.stopImmediatePropagation(),e.stopPropagation&&e.stopPropagation(),e.preventDefault(),!1}function cs(e){if(!(e.ctrlKey||e.metaKey||e.altKey||e.shiftKey||e.button)){var r=e.target;do if(r.localName==="a"&&r.getAttribute("href")){if(r.hasAttribute("data-native")||r.hasAttribute("native"))return;if(is(r))return as(e)}while(r=r.parentNode)}}var Cr=!1;function it(e){e.history&&(j=e.history),this.state={url:e.url||Ve()}}de(it.prototype=new oe,{shouldComponentUpdate:function(e){return e.static!==!0||e.url!==this.props.url||e.onChange!==this.props.onChange},canRoute:function(e){var r=De(this.props.children);return this.g(r,e)!==void 0},routeTo:function(e){this.setState({url:e});var r=this.canRoute(e);return this.p||this.forceUpdate(),r},componentWillMount:function(){this.p=!0},componentDidMount:function(){var e=this;Cr||(Cr=!0,j||addEventListener("popstate",function(){nt(Ve())}),addEventListener("click",cs)),K.push(this),j&&(this.u=j.listen(function(r){var t=r.location||r;e.routeTo(""+(t.pathname||"")+(t.search||""))})),this.p=!1},componentWillUnmount:function(){typeof this.u=="function"&&this.u(),K.splice(K.indexOf(this),1)},componentWillUpdate:function(){this.p=!0},componentDidUpdate:function(){this.p=!1},g:function(e,r){e=e.filter(ts).sort(rs);for(var t=0;t<e.length;t++){var s=e[t],o=es(r,s.props.path,s.props);if(o)return[s,o]}},render:function(e,r){var t,s,o=e.onChange,i=r.url,a=this.c,c=this.g(De(e.children),i);if(c&&(s=Bt(c[0],de(de({url:i,matches:t=c[1]},t),{key:void 0,ref:void 0}))),i!==(a&&a.url)){de(st,a=this.c={url:i,previous:a&&a.url,current:s,path:s?s.props.path:null,matches:t}),a.router=this,a.active=s?[s]:[];for(var g=Fr.length;g--;)Fr[g]({});typeof o=="function"&&o(a)}return We(ns.Provider,{value:a},s)}});var Ur=function(e){return We(e.component,e)};const ls=b("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-arrow-left",children:[b("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),b("path",{d:"M5 12l14 0"}),b("path",{d:"M5 12l6 6"}),b("path",{d:"M5 12l6 -6"})]}),us=b("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-arrow-right",children:[b("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),b("path",{d:"M5 12l14 0"}),b("path",{d:"M13 18l6 -6"}),b("path",{d:"M13 6l6 6"})]}),ps=b("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-brand-windows",children:[b("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),b("path",{d:"M17.8 20l-12 -1.5c-1 -.1 -1.8 -.9 -1.8 -1.9v-9.2c0 -1 .8 -1.8 1.8 -1.9l12 -1.5c1.2 -.1 2.2 .8 2.2 1.9v12.1c0 1.2 -1.1 2.1 -2.2 1.9z"}),b("path",{d:"M12 5l0 14"}),b("path",{d:"M4 12l16 0"})]}),ds=b("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-apple",children:[b("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),b("path",{d:"M4 11.319c0 3.102 .444 5.319 2.222 7.978c1.351 1.797 3.156 2.247 5.08 .988c.426 -.268 .97 -.268 1.397 0c1.923 1.26 3.728 .809 5.079 -.988c1.778 -2.66 2.222 -4.876 2.222 -7.977c0 -2.661 -1.99 -5.32 -4.444 -5.32c-1.267 0 -2.41 .693 -3.22 1.44a.5 .5 0 0 1 -.672 0c-.809 -.746 -1.953 -1.44 -3.22 -1.44c-2.454 0 -4.444 2.66 -4.444 5.319"}),b("path",{d:"M7 12c0 -1.47 .454 -2.34 1.5 -3"}),b("path",{d:"M12 7c0 -1.2 .867 -4 3 -4"})]}),Dr=b("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-brand-github",children:[b("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),b("path",{d:"M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"})]});function Ee(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function ze(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce((o,i)=>ze.bind(null,e,i,o,s),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((o,i)=>i.hook.bind(null,o,s),t)():t(s))}function gs(e,r,t,s){const o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=(i,a)=>Promise.resolve().then(o.bind(null,a)).then(i.bind(null,a))),r==="after"&&(s=(i,a)=>{let c;return Promise.resolve().then(i.bind(null,a)).then(g=>(c=g,o(c,a))).then(()=>c)}),r==="error"&&(s=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(c=>o(c,a))),e.registry[t].push({hook:s,orig:o})}function hs(e,r,t){if(!e.registry[r])return;const s=e.registry[r].map(o=>o.orig).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}const Lr=Function.bind,Ir=Lr.bind(Lr);function at(e,r,t){const s=Ir(hs,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{const i=t?[r,o,t]:[r,o];e[o]=e.api[o]=Ir(gs,null).apply(null,i)})}function ms(){const e=Symbol("Singular"),r={registry:{}},t=ze.bind(null,r,e);return at(t,r,e),t}function _s(){const e={registry:{}},r=ze.bind(null,e);return at(r,e),r}const fs={Singular:ms,Collection:_s};var Es="0.0.0-development",Ts=`octokit-endpoint.js/${Es} ${Ee()}`,vs={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":Ts},mediaType:{format:""}};function bs(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function ws(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function ct(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(s=>{ws(r[s])?s in e?t[s]=ct(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function jr(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function xe(e,r,t){var o;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=bs(t.headers),jr(t),jr(t.headers);const s=ct(e||{},t);return t.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(i=>!s.mediaType.previews.includes(i)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),s}function ys(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var ks=/\{[^}]+\}/g;function Ps(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Gs(e){const r=e.match(ks);return r?r.map(Ps).reduce((t,s)=>t.concat(s),[]):[]}function xr(e,r){const t={__proto__:null};for(const s of Object.keys(e))r.indexOf(s)===-1&&(t[s]=e[s]);return t}function lt(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function X(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function re(e,r,t){return r=e==="+"||e==="#"?lt(r):X(r),t?X(t)+"="+r:r}function Y(e){return e!=null}function Pe(e){return e===";"||e==="&"||e==="?"}function Os(e,r,t,s){var o=e[t],i=[];if(Y(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(re(r,o,Pe(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(Y).forEach(function(a){i.push(re(r,a,Pe(r)?t:""))}):Object.keys(o).forEach(function(a){Y(o[a])&&i.push(re(r,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(Y).forEach(function(c){a.push(re(r,c))}):Object.keys(o).forEach(function(c){Y(o[c])&&(a.push(X(c)),a.push(re(r,o[c].toString())))}),Pe(r)?i.push(X(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?Y(o)&&i.push(X(t)):o===""&&(r==="&"||r==="?")?i.push(X(t)+"="):o===""&&i.push("");return i}function Rs(e){return{expand:As.bind(null,e)}}function As(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let c="";const g=[];if(t.indexOf(o.charAt(0))!==-1&&(c=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(h){var f=/([^:\*]*)(?::(\d+)|(\*))?/.exec(h);g.push(Os(r,c,f[1],f[2]||f[3]))}),c&&c!=="+"){var a=",";return c==="?"?a="&":c!=="#"&&(a=c),(g.length!==0?c:"")+g.join(a)}else return g.join(",")}else return lt(i)}),e==="/"?e:e.replace(/\/$/,"")}function ut(e){var f;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=xr(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Gs(t);t=Rs(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const c=Object.keys(e).filter(l=>a.includes(l)).concat("baseUrl"),g=xr(i,c);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(l=>l.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(f=e.mediaType.previews)!=null&&f.length)){const l=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=l.concat(e.mediaType.previews).map(y=>{const E=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${y}-preview${E}`}).join(",")}return["GET","HEAD"].includes(r)?t=ys(t,g):"data"in g?o=g.data:Object.keys(g).length&&(o=g),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o>"u"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function Ss(e,r,t){return ut(xe(e,r,t))}function pt(e,r){const t=xe(e,r),s=Ss.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:pt.bind(null,t),merge:xe.bind(null,t),parse:ut})}var Fs=pt(null,vs);class te extends Error{constructor(t,s,o){super(t);C(this,"name");C(this,"status");C(this,"request");C(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in o&&(this.response=o.response);const i=Object.assign({},o.request);o.request.headers.authorization&&(i.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var Cs="0.0.0-development",Us={headers:{"user-agent":`octokit-request.js/${Cs} ${Ee()}`}};function Ds(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function $r(e){var l,y,E,G,R;const r=((l=e.request)==null?void 0:l.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((y=e.request)==null?void 0:y.log)||console,s=((E=e.request)==null?void 0:E.parseSuccessResponseBody)!==!1,o=Ds(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([w,k])=>[w,String(k)]));let a;try{a=await r(e.url,{method:e.method,body:o,redirect:(G=e.request)==null?void 0:G.redirect,headers:i,signal:(R=e.request)==null?void 0:R.signal,...e.body&&{duplex:"half"}})}catch(w){let k="Unknown Error";if(w instanceof Error){if(w.name==="AbortError")throw w.status=500,w;k=w.message,w.name==="TypeError"&&"cause"in w&&(w.cause instanceof Error?k=w.cause.message:typeof w.cause=="string"&&(k=w.cause))}const P=new te(k,500,{request:e});throw P.cause=w,P}const c=a.status,g=a.url,h={};for(const[w,k]of a.headers)h[w]=k;const f={url:g,status:c,headers:h,data:""};if("deprecation"in h){const w=h.link&&h.link.match(/<([^>]+)>; rel="deprecation"/),k=w&&w.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${h.sunset}${k?`. See ${k}`:""}`)}if(c===204||c===205)return f;if(e.method==="HEAD"){if(c<400)return f;throw new te(a.statusText,c,{response:f,request:e})}if(c===304)throw f.data=await Ge(a),new te("Not modified",c,{response:f,request:e});if(c>=400)throw f.data=await Ge(a),new te(Ls(f.data),c,{response:f,request:e});return f.data=s?await Ge(a):a.body,f}async function Ge(e){const r=e.headers.get("content-type");return/application\/json/.test(r)?e.json().catch(()=>e.text()).catch(()=>""):!r||/^text\/|charset=utf-8$/.test(r)?e.text():e.arrayBuffer()}function Ls(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function $e(e,r){const t=e.defaults(r);return Object.assign(function(o,i){const a=t.merge(o,i);if(!a.request||!a.request.hook)return $r(t.parse(a));const c=(g,h)=>$r(t.parse(t.merge(g,h)));return Object.assign(c,{endpoint:t,defaults:$e.bind(null,t)}),a.request.hook(c,a)},{endpoint:t,defaults:$e.bind(null,t)})}var qe=$e(Fs,Us),Is="0.0.0-development";function js(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var xs=class extends Error{constructor(r,t,s){super(js(s));C(this,"name","GraphqlResponseError");C(this,"errors");C(this,"data");this.request=r,this.headers=t,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},$s=["method","baseUrl","url","headers","request","query","mediaType"],qs=["query","method","url"],qr=/\/api\/v3\/?$/;function Ns(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(qs.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((a,c)=>$s.includes(c)?(a[c]=s[c],a):(a.variables||(a.variables={}),a.variables[c]=s[c],a),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return qr.test(i)&&(o.url=i.replace(qr,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const c={};for(const g of Object.keys(a.headers))c[g]=a.headers[g];throw new xs(o,c,a.data)}return a.data.data})}function Ke(e,r){const t=e.defaults(r);return Object.assign((o,i)=>Ns(t,o,i),{defaults:Ke.bind(null,t),endpoint:t.endpoint})}Ke(qe,{headers:{"user-agent":`octokit-graphql.js/${Is} ${Ee()}`},method:"POST",url:"/graphql"});function Ws(e){return Ke(e,{method:"POST",url:"/graphql"})}var Hs=/^v1\./,Ms=/^ghs_/,Bs=/^ghu_/;async function Vs(e){const r=e.split(/\./).length===3,t=Hs.test(e)||Ms.test(e),s=Bs.test(e);return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}function zs(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function Ks(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=zs(e),r(o)}var Qs=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(Vs.bind(null,r),{hook:Ks.bind(null,r)})};const dt="6.1.2",Nr=()=>{},Js=console.warn.bind(console),Ys=console.error.bind(console),Wr=`octokit-core.js/${dt} ${Ee()}`;var ge;let Xs=(ge=class{constructor(r={}){C(this,"request");C(this,"graphql");C(this,"log");C(this,"hook");C(this,"auth");const t=new fs.Collection,s={baseUrl:qe.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=r.userAgent?`${r.userAgent} ${Wr}`:Wr,r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=qe.defaults(s),this.graphql=Ws(this.request).defaults(s),this.log=Object.assign({debug:Nr,info:Nr,warn:Js,error:Ys},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,c=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",c.hook),this.auth=c}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=Qs(r.auth);t.wrap("request",i.hook),this.auth=i}const o=this.constructor;for(let i=0;i<o.plugins.length;++i)Object.assign(this,o.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...s){const o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var o;const t=this.plugins;return o=class extends this{},C(o,"plugins",t.concat(r.filter(i=>!t.includes(i)))),o}},C(ge,"VERSION",dt),C(ge,"plugins",[]),ge);var Zs="0.0.0-development";function eo(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const i=Object.keys(e.data)[0],a=e.data[i];return e.data=a,typeof t<"u"&&(e.data.incomplete_results=t),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function Qe(e,r,t){const s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,i=s.method,a=s.headers;let c=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!c)return{done:!0};try{const g=await o({method:i,url:c,headers:a}),h=eo(g);return c=((h.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:h}}catch(g){if(g.status!==409)throw g;return c="",{value:{status:200,headers:{},data:[]}}}}})}}function gt(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),ht(e,[],Qe(e,r,t)[Symbol.asyncIterator](),s)}function ht(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let i=!1;function a(){i=!0}return r=r.concat(s?s(o.value,a):o.value.data),i?r:ht(e,r,t,s)})}Object.assign(gt,{iterator:Qe});function mt(e){return{paginate:Object.assign(gt.bind(null,e),{iterator:Qe.bind(null,e)})}}mt.VERSION=Zs;var ro=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,to=class extends Error{constructor(r,t){super(ro(r.pathInQuery,t));C(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},so=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);C(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},oo=e=>Object.prototype.toString.call(e)==="[object Object]";function _t(e){const r=ft(e,"pageInfo");if(r.length===0)throw new so(e);return r}var ft=(e,r,t=[])=>{for(const s of Object.keys(e)){const o=[...t,s],i=e[s];if(i.hasOwnProperty(r))return o;if(oo(i)){const a=ft(i,r,o);if(a.length>0)return a}}return[]},ne=(e,r)=>r.reduce((t,s)=>t[s],e),Oe=(e,r,t)=>{const s=r[r.length-1],o=[...r].slice(0,-1),i=ne(e,o);typeof t=="function"?i[s]=t(i[s]):i[s]=t},no=e=>{const r=_t(e);return{pathInQuery:r,pageInfo:ne(e,[...r,"pageInfo"])}},Et=e=>e.hasOwnProperty("hasNextPage"),io=e=>Et(e)?e.endCursor:e.startCursor,ao=e=>Et(e)?e.hasNextPage:e.hasPreviousPage,Tt=e=>(r,t={})=>{let s=!0,o={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const i=await e.graphql(r,o),a=no(i),c=io(a.pageInfo);if(s=ao(a.pageInfo),s&&c===o.cursor)throw new to(a,c);return o={...o,cursor:c},{done:!1,value:i}}})}},co=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=_t(e),s=[...t,"nodes"],o=ne(r,s);o&&Oe(e,s,g=>[...g,...o]);const i=[...t,"edges"],a=ne(r,i);a&&Oe(e,i,g=>[...g,...a]);const c=[...t,"pageInfo"];return Oe(e,c,ne(r,c)),e},lo=e=>{const r=Tt(e);return async(t,s={})=>{let o={};for await(const i of r(t,s))o=co(o,i);return o}};function uo(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(lo(e),{iterator:Tt(e)})})}}const po="13.2.4",go={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var ho=go;const Q=new Map;for(const[e,r]of Object.entries(ho))for(const[t,s]of Object.entries(r)){const[o,i,a]=s,[c,g]=o.split(/ /),h=Object.assign({method:c,url:g},i);Q.has(e)||Q.set(e,new Map),Q.get(e).set(t,{scope:e,methodName:t,endpointDefaults:h,decorations:a})}const mo={has({scope:e},r){return Q.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[...Q.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];const o=Q.get(r).get(s);if(!o)return;const{endpointDefaults:i,decorations:a}=o;return a?t[s]=fo(e,r,s,i,a):t[s]=e.request.defaults(i),t[s]}};function _o(e){const r={};for(const t of Q.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},mo);return r}function fo(e,r,t,s,o){const i=e.request.defaults(s);function a(...c){let g=i.endpoint.merge(...c);if(o.mapToData)return g=Object.assign({},g,{data:g[o.mapToData],[o.mapToData]:void 0}),i(g);if(o.renamed){const[h,f]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${h}.${f}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const h=i.endpoint.merge(...c);for(const[f,l]of Object.entries(o.renamedParameters))f in h&&(e.log.warn(`"${f}" parameter is deprecated for "octokit.${r}.${t}()". Use "${l}" instead`),l in h||(h[l]=h[f]),delete h[f]);return i(h)}return i(...c)}return Object.assign(a,i)}function vt(e){return{rest:_o(e)}}vt.VERSION=po;var Re=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Eo(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var bt={exports:{}};(function(e,r){(function(t,s){e.exports=s()})(Re,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Re<"u"?Re:typeof self<"u"?self:{};function s(v){return v&&v.default||v}var o=function(v,u,n={}){var p,d,m;for(p in u)m=u[p],n[p]=(d=v[p])!=null?d:m;return n},i=function(v,u,n={}){var p,d;for(p in v)d=v[p],u[p]!==void 0&&(n[p]=d);return n},a={load:o,overwrite:i},c;c=class{constructor(u,n){this.incr=u,this.decr=n,this._first=null,this._last=null,this.length=0}push(u){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:u,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var u;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),u=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,u}first(){if(this._first!=null)return this._first.value}getArray(){var u,n,p;for(u=this._first,p=[];u!=null;)p.push((n=u,u=u.next,n.value));return p}forEachShift(u){var n;for(n=this.shift();n!=null;)u(n),n=this.shift()}debug(){var u,n,p,d,m;for(u=this._first,m=[];u!=null;)m.push((n=u,u=u.next,{value:n.value,prev:(p=n.prev)!=null?p.value:void 0,next:(d=n.next)!=null?d.value:void 0}));return m}};var g=c,h;h=class{constructor(u){if(this.instance=u,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,p)=>this._addListener(n,"many",p),this.instance.once=(n,p)=>this._addListener(n,"once",p),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(u,n,p){var d;return(d=this._events)[u]==null&&(d[u]=[]),this._events[u].push({cb:p,status:n}),this.instance}listenerCount(u){return this._events[u]!=null?this._events[u].length:0}async trigger(u,...n){var p,d;try{return u!=="debug"&&this.trigger("debug",`Event triggered: ${u}`,n),this._events[u]==null?void 0:(this._events[u]=this._events[u].filter(function(m){return m.status!=="none"}),d=this._events[u].map(async m=>{var _,T;if(m.status!=="none"){m.status==="once"&&(m.status="none");try{return T=typeof m.cb=="function"?m.cb(...n):void 0,typeof(T!=null?T.then:void 0)=="function"?await T:T}catch(O){return _=O,this.trigger("error",_),null}}}),(await Promise.all(d)).find(function(m){return m!=null}))}catch(m){return p=m,this.trigger("error",p),null}}};var f=h,l,y,E;l=g,y=f,E=class{constructor(u){this.Events=new y(this),this._length=0,this._lists=(function(){var n,p,d;for(d=[],n=1,p=u;1<=p?n<=p:n>=p;1<=p?++n:--n)d.push(new l(()=>this.incr(),()=>this.decr()));return d}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(u){return this._lists[u.options.priority].push(u)}queued(u){return u!=null?this._lists[u].length:this._length}shiftAll(u){return this._lists.forEach(function(n){return n.forEachShift(u)})}getFirst(u=this._lists){var n,p,d;for(n=0,p=u.length;n<p;n++)if(d=u[n],d.length>0)return d;return[]}shiftLastFrom(u){return this.getFirst(this._lists.slice(u).reverse()).shift()}};var G=E,R;R=class extends Error{};var w=R,k,P,$,L,q;L=10,P=5,q=a,k=w,$=class{constructor(u,n,p,d,m,_,T,O){this.task=u,this.args=n,this.rejectOnDrop=m,this.Events=_,this._states=T,this.Promise=O,this.options=q.load(p,d),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===d.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((U,D)=>{this._resolve=U,this._reject=D}),this.retryCount=0}_sanitizePriority(u){var n;return n=~~u!==u?P:u,n<0?0:n>L-1?L-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:u,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(u??new k(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(u){var n;if(n=this._states.jobStatus(this.options.id),!(n===u||u==="DONE"&&n===null))throw new k(`Invalid job status ${n}, expected ${u}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(u,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:u,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(u,n,p,d){var m,_,T;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),_={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",_);try{if(T=await(u!=null?u.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(_),await d(this.options,_),this._assertStatus("DONE"),this._resolve(T)}catch(O){return m=O,this._onFailure(m,_,n,p,d)}}doExpire(u,n,p){var d,m;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},d=new k(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(d,m,u,n,p)}async _onFailure(u,n,p,d,m){var _,T;if(p())return _=await this.Events.trigger("failed",u,n),_!=null?(T=~~_,this.Events.trigger("retry",`Retrying ${this.options.id} after ${T} ms`,n),this.retryCount++,d(T)):(this.doDone(n),await m(this.options,n),this._assertStatus("DONE"),this._reject(u))}doDone(u){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",u)}};var I=$,W,M,B;B=a,W=w,M=class{constructor(u,n,p){this.instance=u,this.storeOptions=n,this.clientId=this.instance._randomIndex(),B.load(p,p,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var u;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(u=this.heartbeat=setInterval(()=>{var n,p,d,m,_;if(m=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&m>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=m,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&m>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:d,reservoir:_}=this.storeOptions,this._lastReservoirIncrease=m,p=d!=null?Math.min(n,d-_):n,p>0))return this.storeOptions.reservoir+=p,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?u.unref():void 0:clearInterval(this.heartbeat)}async __publish__(u){return await this.yieldLoop(),this.instance.Events.trigger("message",u.toString())}async __disconnect__(u){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(u=0){return new this.Promise(function(n,p){return setTimeout(n,u)})}computePenalty(){var u;return(u=this.storeOptions.penalty)!=null?u:15*this.storeOptions.minTime||5e3}async __updateSettings__(u){return await this.yieldLoop(),B.overwrite(u,u,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(u){return await this.yieldLoop(),this._nextRequest+this.timeout<u}computeCapacity(){var u,n;return{maxConcurrent:u,reservoir:n}=this.storeOptions,u!=null&&n!=null?Math.min(u-this._running,n):u!=null?u-this._running:n??null}conditionsCheck(u){var n;return n=this.computeCapacity(),n==null||u<=n}async __incrementReservoir__(u){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(u){return this._unblockTime>=u}check(u,n){return this.conditionsCheck(u)&&this._nextRequest-n<=0}async __check__(u){var n;return await this.yieldLoop(),n=Date.now(),this.check(u,n)}async __register__(u,n,p){var d,m;return await this.yieldLoop(),d=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),m=Math.max(this._nextRequest-d,0),this._nextRequest=d+m+this.storeOptions.minTime,{success:!0,wait:m,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(u,n){var p,d,m;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new W(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return d=Date.now(),m=this.storeOptions.highWater!=null&&u===this.storeOptions.highWater&&!this.check(n,d),p=this.strategyIsBlock()&&(m||this.isBlocked(d)),p&&(this._unblockTime=d+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:m,blocked:p,strategy:this.storeOptions.strategy}}async __free__(u,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var x=M,V,Ye;V=w,Ye=class{constructor(u){this.status=u,this._jobs={},this.counts=this.status.map(function(){return 0})}next(u){var n,p;if(n=this._jobs[u],p=n+1,n!=null&&p<this.status.length)return this.counts[n]--,this.counts[p]++,this._jobs[u]++;if(n!=null)return this.counts[n]--,delete this._jobs[u]}start(u){var n;return n=0,this._jobs[u]=n,this.counts[n]++}remove(u){var n;return n=this._jobs[u],n!=null&&(this.counts[n]--,delete this._jobs[u]),n!=null}jobStatus(u){var n;return(n=this.status[this._jobs[u]])!=null?n:null}statusJobs(u){var n,p,d,m,_;if(u!=null){if(p=this.status.indexOf(u),p<0)throw new V(`status must be one of ${this.status.join(", ")}`);d=this._jobs,m=[];for(n in d)_=d[n],_===p&&m.push(n);return m}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((u,n,p)=>(u[this.status[p]]=n,u),{})}};var Gt=Ye,Xe,Ze;Xe=g,Ze=class{constructor(u,n){this.schedule=this.schedule.bind(this),this.name=u,this.Promise=n,this._running=0,this._queue=new Xe}isEmpty(){return this._queue.length===0}async _tryToRun(){var u,n,p,d,m,_,T;if(this._running<1&&this._queue.length>0)return this._running++,{task:T,args:u,resolve:m,reject:d}=this._queue.shift(),n=await async function(){try{return _=await T(...u),function(){return m(_)}}catch(O){return p=O,function(){return d(p)}}}(),this._running--,this._tryToRun(),n()}schedule(u,...n){var p,d,m;return m=d=null,p=new this.Promise(function(_,T){return m=_,d=T}),this._queue.push({task:u,args:n,resolve:m,reject:d}),this._tryToRun(),p}};var Ot=Ze,er="2.19.5",Rt={version:er},At=Object.freeze({version:er,default:Rt}),rr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),tr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),St=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),sr,or,nr,ir,ar,ue;ue=a,sr=f,ir=rr,nr=tr,ar=St,or=(function(){class v{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,ue.load(this.limiterOptions,this.defaults,this),this.Events=new sr(this),this.instances={},this.Bottleneck=Er,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new ir(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new nr(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var p;return(p=this.instances[n])!=null?p:(()=>{var d;return d=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",d,n),d})()}async deleteKey(n=""){var p,d;return d=this.instances[n],this.connection&&(p=await this.connection.__runCommand__(["del",...ar.allKeys(`${this.id}-${n}`)])),d!=null&&(delete this.instances[n],await d.disconnect()),d!=null||p>0}limiters(){var n,p,d,m;p=this.instances,d=[];for(n in p)m=p[n],d.push({key:n,limiter:m});return d}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,p,d,m,_,T,O,U,D;if(this.connection==null)return this.Promise.resolve(this.keys());for(T=[],n=null,D=`b_${this.id}-`.length,p=9;n!==0;)for([U,d]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~U,m=0,O=d.length;m<O;m++)_=d[m],T.push(_.slice(D,-p));return T}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var p,d,m,_,T,O;T=Date.now(),m=this.instances,_=[];for(d in m){O=m[d];try{await O._store.__groupCheck__(T)?_.push(this.deleteKey(d)):_.push(void 0)}catch(U){p=U,_.push(O.Events.trigger("error",p))}}return _},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(ue.overwrite(n,this.defaults,this),ue.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var p;if(!this.sharedConnection)return(p=this.connection)!=null?p.disconnect(n):void 0}}return v.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},v}).call(t);var Ft=or,cr,lr,ur;ur=a,lr=f,cr=(function(){class v{constructor(n={}){this.options=n,ur.load(this.options,this.defaults,this),this.Events=new lr(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,p)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var p;return this._arr.push(n),p=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),p}}return v.prototype.defaults={maxTime:null,maxSize:null,Promise},v}).call(t);var Ct=cr,Ut=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Dt=s(At),pr,dr,Te,ve,gr,be,hr,mr,_r,we,N,fr=[].splice;be=10,dr=5,N=a,hr=G,ve=I,gr=x,mr=Ut,Te=f,_r=Gt,we=Ot,pr=(function(){class v{constructor(n={},...p){var d,m;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,p),N.load(n,this.instanceDefaults,this),this._queues=new hr(be),this._scheduled={},this._states=new _r(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new Te(this),this._submitLock=new we("submit",this.Promise),this._registerLock=new we("register",this.Promise),m=N.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return d=N.load(n,this.redisStoreDefaults,{}),new mr(this,m,d);if(this.datastore==="local")return d=N.load(n,this.localStoreDefaults,{}),new gr(this,m,d);throw new v.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var _;return(_=this._store.heartbeat)!=null&&typeof _.ref=="function"?_.ref():void 0}),this._queues.on("zero",()=>{var _;return(_=this._store.heartbeat)!=null&&typeof _.unref=="function"?_.unref():void 0})}_validateOptions(n,p){if(!(n!=null&&typeof n=="object"&&p.length===0))throw new v.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,p,d,m){var _,T;try{if({running:T}=await this._store.__free__(n,d.weight),this.Events.trigger("debug",`Freed ${d.id}`,m),T===0&&this.empty())return this.Events.trigger("idle")}catch(O){return _=O,this.Events.trigger("error",_)}}_run(n,p,d){var m,_,T;return p.doRun(),m=this._clearGlobalState.bind(this,n),T=this._run.bind(this,n,p),_=this._free.bind(this,n,p),this._scheduled[n]={timeout:setTimeout(()=>p.doExecute(this._limiter,m,T,_),d),expiration:p.options.expiration!=null?setTimeout(function(){return p.doExpire(m,T,_)},d+p.options.expiration):void 0,job:p}}_drainOne(n){return this._registerLock.schedule(()=>{var p,d,m,_,T;return this.queued()===0?this.Promise.resolve(null):(T=this._queues.getFirst(),{options:_,args:p}=m=T.first(),n!=null&&_.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${_.id}`,{args:p,options:_}),d=this._randomIndex(),this._store.__register__(d,_.weight,_.expiration).then(({success:O,wait:U,reservoir:D})=>{var ee;return this.Events.trigger("debug",`Drained ${_.id}`,{success:O,args:p,options:_}),O?(T.shift(),ee=this.empty(),ee&&this.Events.trigger("empty"),D===0&&this.Events.trigger("depleted",ee),this._run(d,m,U),this.Promise.resolve(_.weight)):this.Promise.resolve(null)})))})}_drainAll(n,p=0){return this._drainOne(n).then(d=>{var m;return d!=null?(m=n!=null?n-d:n,this._drainAll(m,p+d)):this.Promise.resolve(p)}).catch(d=>this.Events.trigger("error",d))}_dropAllQueued(n){return this._queues.shiftAll(function(p){return p.doDrop({message:n})})}stop(n={}){var p,d;return n=N.load(n,this.stopDefaults),d=m=>{var _;return _=()=>{var T;return T=this._states.counts,T[0]+T[1]+T[2]+T[3]===m},new this.Promise((T,O)=>_()?T():this.on("done",()=>{if(_())return this.removeAllListeners("done"),T()}))},p=n.dropWaitingJobs?(this._run=function(m,_){return _.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var m,_,T;_=this._scheduled;for(m in _)T=_[m],this.jobStatus(T.job.options.id)==="RUNNING"&&(clearTimeout(T.timeout),clearTimeout(T.expiration),T.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),d(0)}))):this.schedule({priority:be-1,weight:0},()=>d(1)),this._receive=function(m){return m._reject(new v.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new v.prototype.BottleneckError("stop() has already been called")),p}async _addToQueue(n){var p,d,m,_,T,O,U;({args:p,options:_}=n);try{({reachedHWM:T,blocked:d,strategy:U}=await this._store.__submit__(this.queued(),_.weight))}catch(D){return m=D,this.Events.trigger("debug",`Could not queue ${_.id}`,{args:p,options:_,error:m}),n.doDrop({error:m}),!1}return d?(n.doDrop(),!0):T&&(O=U===v.prototype.strategy.LEAK?this._queues.shiftLastFrom(_.priority):U===v.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(_.priority+1):U===v.prototype.strategy.OVERFLOW?n:void 0,O!=null&&O.doDrop(),O==null||U===v.prototype.strategy.OVERFLOW)?(O==null&&n.doDrop(),T):(n.doQueue(T,d),this._queues.push(n),await this._drainAll(),T)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new v.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var p,d,m,_,T,O,U;return typeof n[0]=="function"?(T=n,[d,...n]=T,[p]=fr.call(n,-1),_=N.load({},this.jobDefaults)):(O=n,[_,d,...n]=O,[p]=fr.call(n,-1),_=N.load(_,this.jobDefaults)),U=(...D)=>new this.Promise(function(ee,It){return d(...D,function(...Tr){return(Tr[0]!=null?It:ee)(Tr)})}),m=new ve(U,n,_,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),m.promise.then(function(D){return typeof p=="function"?p(...D):void 0}).catch(function(D){return Array.isArray(D)?typeof p=="function"?p(...D):void 0:typeof p=="function"?p(D):void 0}),this._receive(m)}schedule(...n){var p,d,m;return typeof n[0]=="function"?([m,...n]=n,d={}):[d,m,...n]=n,p=new ve(m,n,d,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(p),p.promise}wrap(n){var p,d;return p=this.schedule.bind(this),d=function(...m){return p(n.bind(this),...m)},d.withOptions=function(m,..._){return p(m,n,..._)},d}async updateSettings(n={}){return await this._store.__updateSettings__(N.overwrite(n,this.storeDefaults)),N.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return v.default=v,v.Events=Te,v.version=v.prototype.version=Dt.version,v.strategy=v.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},v.BottleneckError=v.prototype.BottleneckError=w,v.Group=v.prototype.Group=Ft,v.RedisConnection=v.prototype.RedisConnection=rr,v.IORedisConnection=v.prototype.IORedisConnection=tr,v.Batcher=v.prototype.Batcher=Ct,v.prototype.jobDefaults={priority:dr,weight:1,expiration:null,id:"<no-id>"},v.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:v.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},v.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},v.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},v.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},v.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},v}).call(t);var Er=pr,Lt=Er;return Lt})})(bt);var To=bt.exports;const wt=Eo(To);async function yt(e,r,t,s){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const o=s.request.retries!=null?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,o,i)}throw t}async function vo(e,r,t,s){const o=new wt;return o.on("failed",function(i,a){const c=~~i.request.request.retries,g=~~i.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,c>a.retryCount)return g*e.retryAfterBaseValue}),o.schedule(bo.bind(null,e,r,t),s)}async function bo(e,r,t,s){const o=await t(t,s);if(o.data&&o.data.errors&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const i=new te(o.data.errors[0].message,500,{request:s,response:o});return yt(e,r,i,s)}return o}var wo="0.0.0-development";function kt(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",yt.bind(null,t,e)),e.hook.wrap("request",vo.bind(null,t,e))),{retry:{retryRequest:(s,o,i)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:i}),s)}}}kt.VERSION=wo;var yo="0.0.0-development",Ae=()=>Promise.resolve();function ko(e,r,t){return e.retryLimiter.schedule(Po,e,r,t)}async function Po(e,r,t){const s=t.method!=="GET"&&t.method!=="HEAD",{pathname:o}=new URL(t.url,"http://github.test"),i=t.method==="GET"&&o.startsWith("/search/"),a=o.startsWith("/graphql"),g=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(g.expiration=1e3*60),(s||a)&&await e.write.key(e.id).schedule(g,Ae),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(g,Ae),i&&await e.search.key(e.id).schedule(g,Ae);const h=e.global.key(e.id).schedule(g,r,t);if(a){const f=await h;if(f.data.errors!=null&&f.data.errors.some(l=>l.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:f,data:f.data})}return h}var Go=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Oo(e){const t=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var Hr=Oo(Go),Pt=Hr.test.bind(Hr),Z={},Ro=function(e,r){Z.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),Z.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),Z.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),Z.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function Je(e,r){const{enabled:t=!0,Bottleneck:s=wt,id:o="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const c={connection:a,timeout:i};Z.global==null&&Ro(s,c);const g=Object.assign({clustering:a!=null,triggersNotification:Pt,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...Z},r.throttle);if(typeof g.onSecondaryRateLimit!="function"||typeof g.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const h={},f=new s.Events(h);return h.on("secondary-limit",g.onSecondaryRateLimit),h.on("rate-limit",g.onRateLimit),h.on("error",l=>e.log.warn("Error in throttling-plugin limit handler",l)),g.retryLimiter.on("failed",async function(l,y){const[E,G,R]=y.args,{pathname:w}=new URL(R.url,"http://github.test");if(!(w.startsWith("/graphql")&&l.status!==401||l.status===403))return;const P=~~G.retryCount;G.retryCount=P,R.request.retryCount=P;const{wantRetry:$,retryAfter:L=0}=await async function(){var q;if(/\bsecondary rate\b/i.test(l.message)){const I=Number(l.response.headers["retry-after"])||E.fallbackSecondaryRateRetryAfter;return{wantRetry:await f.trigger("secondary-limit",I,R,e,P),retryAfter:I}}if(l.response.headers!=null&&l.response.headers["x-ratelimit-remaining"]==="0"||(((q=l.response.data)==null?void 0:q.errors)??[]).some(I=>I.type==="RATE_LIMITED")){const I=new Date(~~l.response.headers["x-ratelimit-reset"]*1e3).getTime(),W=Math.max(Math.ceil((I-Date.now())/1e3)+1,0);return{wantRetry:await f.trigger("rate-limit",W,R,e,P),retryAfter:W}}return{}}();if($)return G.retryCount++,L*E.retryAfterBaseValue}),e.hook.wrap("request",ko.bind(null,g)),{}}Je.VERSION=yo;Je.triggersNotification=Pt;var Ao="0.0.0-development",So=Xs.plugin(vt,mt,uo,kt,Je).defaults({userAgent:`octokit.js/${Ao}`,throttle:{onRateLimit:Fo,onSecondaryRateLimit:Co}});function Fo(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function Co(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}const Uo="/assets/1-Cu8PJRqX.png",Do="/assets/2-C6ZOx5AD.png",Lo="/assets/3-nbcnm9YD.png",Io="/assets/4-BOmMiAdd.png";function jo(){let e=[Uo,Do,Lo,Io];const[r,t]=ke(0),s=Qt(null),[o,i]=ke({Windows:"",Mac:"",other:"https://github.com/n0vella/cardo/releases/latest/"}),[a,c]=ke("other"),g=async()=>{const f=await new So({auth:void 0}).request("GET /repos/n0vella/cardo/releases/latest",{owner:"OWNER",repo:"REPO",headers:{"X-GitHub-Api-Version":"2022-11-28"}}),l={...o};for(const y of f.data.assets)y.name.endsWith(".msi")?l.Windows=y.browser_download_url:y.name.endsWith(".dmg")&&(l.Mac=y.browser_download_url);i(l)};return et(()=>{document.title="Cardo",navigator.userAgent.includes("Win")?c("Windows"):navigator.userAgent.includes("Mac")&&c("Mac"),g()},[]),b("div",{className:"w-full text-zinc-100 flex flex-col items-center pt-6 gap-8",children:[b("div",{className:"flex flex-col items-center gap-1",children:[b("img",{className:"w-16 cursor-pointer hover:p-1",title:"Open Github Repo",src:"https://raw.githubusercontent.com/n0vella/cardo/master/src-tauri/icons/icon.png",onClick:()=>open("https://github.com/n0vella/cardo/")}),b("h1",{className:"text-2xl md:text-4xl lg:text-5xl text-nowrap",children:"Cardo podcast player"})]}),b("div",{className:"group relative w-5/6 lg:w-2/5",children:[b("div",{className:"opacity-0 group-hover:opacity-100 transition-opacity absolute w-full top-1/2 -translate-y-1/2 flex justify-between h-1/2",children:[b("button",{className:"bg-purple-500 w-1/12 rounded-r-full opacity-60 hover:opacity-90 transition-opacity",onClick:()=>{s.current&&(s.current.scrollLeft-=s.current.scrollWidth/e.length,t(Math.max(0,r-1)))},children:ls}),b("button",{className:"bg-purple-500 w-1/12 rounded-l-full opacity-60 hover:opacity-90 transition-opacity duration-200",onClick:()=>{s.current&&(s.current.scrollLeft+=s.current.scrollWidth/e.length,t(Math.min(e.length-1,r+1)))},children:us})]}),b("div",{className:"flex overflow-x-auto snap-x snap-mandatory scroll-smooth shadow-lg shadow-zinc-950",ref:s,children:e.map(h=>b("img",{className:"shrink-0 snap-always snap-center",src:h}))}),b("div",{className:"absolute flex opacity-0 group-hover:opacity-100 bottom-0 mb-3 left-1/2 -translate-x-1/2 gap-3",children:e.map((h,f)=>b("div",{className:`border-1 border-purple-900 w-[10px] h-[10px] rounded-full
                ${r==f?"bg-purple-700":"bg-zinc-100"}`}))})]}),b("div",{className:"flex items-center h-10",children:[b("button",{className:"flex items-center gap-1 bg-purple-700 pr-2 hover:bg-purple-600",title:a=="other"?"Go to releases page":"Download latest release for "+a,onClick:()=>{open(o[a])},children:[b("span",{className:"w-10 p-1",children:a=="Windows"?ps:a=="Mac"?ds:Dr}),b("p",{className:"text-lg",children:"DOWNLOAD"})]}),a!="other"&&b("button",{className:"flex bg-purple-900 hover:bg-purple-800",title:"Go to releases page",onClick:()=>open(o.other),children:b("span",{className:"w-10 p-1",children:Dr})})]})]})}function xo(e){return et(()=>{ot(e)},[]),b(le,{})}function $o(){return b("div",{className:"w-full h-screen bg-zinc-900 pt-10 font-sans overflow-y-auto scroll-smooth",children:[b("div",{className:"absolute top-0 w-full h-12 bg-zinc-950 flex justify-end px-3 py-1",children:b("a",{href:"https://github.com/n0vella",target:"_blank",className:" contents",children:b("img",{className:"rounded-full hover:mix-blend-plus-lighter",src:"https://avatars.githubusercontent.com/u/177157984",alt:"Profile picture"})})}),b(it,{children:[b(Ur,{path:"/",component:()=>xo("/cardo")}),b(Ur,{path:"/cardo",component:jo})]}),b("div",{className:"w-full h-12 bg-zinc-950 flex justify-end px-3 py-1 mt-10"})]})}Mt(b($o,{}),document.getElementById("app"));
