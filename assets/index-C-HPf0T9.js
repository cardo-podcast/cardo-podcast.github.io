var Bt=Object.defineProperty;var Vt=(e,r,t)=>r in e?Bt(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var x=(e,r,t)=>Vt(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();var ge,C,et,Y,Pr,rt,xe,Ke,je,$e,tt,pe={},st=[],zt=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,ye=Array.isArray;function Q(e,r){for(var t in r)e[t]=r[t];return e}function ot(e){var r=e.parentNode;r&&r.removeChild(e)}function Qe(e,r,t){var s,o,i,a={};for(i in r)i=="key"?s=r[i]:i=="ref"?o=r[i]:a[i]=r[i];if(arguments.length>2&&(a.children=arguments.length>3?ge.call(arguments,2):t),typeof e=="function"&&e.defaultProps!=null)for(i in e.defaultProps)a[i]===void 0&&(a[i]=e.defaultProps[i]);return ce(e,a,s,o,null)}function ce(e,r,t,s,o){var i={type:e,props:r,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:o??++et,__i:-1,__u:0};return o==null&&C.vnode!=null&&C.vnode(i),i}function he(e){return e.children}function le(e,r){this.props=e,this.context=r}function ee(e,r){if(r==null)return e.__?ee(e.__,e.__i+1):null;for(var t;r<e.__k.length;r++)if((t=e.__k[r])!=null&&t.__e!=null)return t.__e;return typeof e.type=="function"?ee(e):null}function nt(e){var r,t;if((e=e.__)!=null&&e.__c!=null){for(e.__e=e.__c.base=null,r=0;r<e.__k.length;r++)if((t=e.__k[r])!=null&&t.__e!=null){e.__e=e.__c.base=t.__e;break}return nt(e)}}function qe(e){(!e.__d&&(e.__d=!0)&&Y.push(e)&&!ve.__r++||Pr!==C.debounceRendering)&&((Pr=C.debounceRendering)||rt)(ve)}function ve(){var e,r,t,s,o,i,a,l;for(Y.sort(xe);e=Y.shift();)e.__d&&(r=Y.length,s=void 0,i=(o=(t=e).__v).__e,a=[],l=[],t.__P&&((s=Q({},o)).__v=o.__v+1,C.vnode&&C.vnode(s),Je(t.__P,s,o,t.__n,t.__P.namespaceURI,32&o.__u?[i]:null,a,i??ee(o),!!(32&o.__u),l),s.__v=o.__v,s.__.__k[s.__i]=s,ct(a,s,l),s.__e!=i&&nt(s)),Y.length>r&&Y.sort(xe));ve.__r=0}function it(e,r,t,s,o,i,a,l,g,h,_){var c,k,E,R,F,w=s&&s.__k||st,P=r.length;for(t.__d=g,Kt(t,r,w),g=t.__d,c=0;c<P;c++)(E=t.__k[c])!=null&&typeof E!="boolean"&&typeof E!="function"&&(k=E.__i===-1?pe:w[E.__i]||pe,E.__i=c,Je(e,E,k,o,i,a,l,g,h,_),R=E.__e,E.ref&&k.ref!=E.ref&&(k.ref&&Ye(k.ref,null,E),_.push(E.ref,E.__c||R,E)),F==null&&R!=null&&(F=R),65536&E.__u||k.__k===E.__k?g=at(E,g,e):typeof E.type=="function"&&E.__d!==void 0?g=E.__d:R&&(g=R.nextSibling),E.__d=void 0,E.__u&=-196609);t.__d=g,t.__e=F}function Kt(e,r,t){var s,o,i,a,l,g=r.length,h=t.length,_=h,c=0;for(e.__k=[],s=0;s<g;s++)a=s+c,(o=e.__k[s]=(o=r[s])==null||typeof o=="boolean"||typeof o=="function"?null:typeof o=="string"||typeof o=="number"||typeof o=="bigint"||o.constructor==String?ce(null,o,null,null,null):ye(o)?ce(he,{children:o},null,null,null):o.constructor===void 0&&o.__b>0?ce(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o)!=null?(o.__=e,o.__b=e.__b+1,l=Qt(o,t,a,_),o.__i=l,i=null,l!==-1&&(_--,(i=t[l])&&(i.__u|=131072)),i==null||i.__v===null?(l==-1&&c--,typeof o.type!="function"&&(o.__u|=65536)):l!==a&&(l==a-1?c--:l==a+1?c++:l>a?_>g-a?c+=l-a:c--:l<a&&(l==a-c?c-=l-a:c++),l!==s+c&&(o.__u|=65536))):(i=t[a])&&i.key==null&&i.__e&&!(131072&i.__u)&&(i.__e==e.__d&&(e.__d=ee(i)),He(i,i,!1),t[a]=null,_--);if(_)for(s=0;s<h;s++)(i=t[s])!=null&&!(131072&i.__u)&&(i.__e==e.__d&&(e.__d=ee(i)),He(i,i))}function at(e,r,t){var s,o;if(typeof e.type=="function"){for(s=e.__k,o=0;s&&o<s.length;o++)s[o]&&(s[o].__=e,r=at(s[o],r,t));return r}e.__e!=r&&(r&&e.type&&!t.contains(r)&&(r=ee(e)),t.insertBefore(e.__e,r||null),r=e.__e);do r=r&&r.nextSibling;while(r!=null&&r.nodeType===8);return r}function Ne(e,r){return r=r||[],e==null||typeof e=="boolean"||(ye(e)?e.some(function(t){Ne(t,r)}):r.push(e)),r}function Qt(e,r,t,s){var o=e.key,i=e.type,a=t-1,l=t+1,g=r[t];if(g===null||g&&o==g.key&&i===g.type&&!(131072&g.__u))return t;if(s>(g!=null&&!(131072&g.__u)?1:0))for(;a>=0||l<r.length;){if(a>=0){if((g=r[a])&&!(131072&g.__u)&&o==g.key&&i===g.type)return a;a--}if(l<r.length){if((g=r[l])&&!(131072&g.__u)&&o==g.key&&i===g.type)return l;l++}}return-1}function Gr(e,r,t){r[0]==="-"?e.setProperty(r,t??""):e[r]=t==null?"":typeof t!="number"||zt.test(r)?t:t+"px"}function _e(e,r,t,s,o){var i;e:if(r==="style")if(typeof t=="string")e.style.cssText=t;else{if(typeof s=="string"&&(e.style.cssText=s=""),s)for(r in s)t&&r in t||Gr(e.style,r,"");if(t)for(r in t)s&&t[r]===s[r]||Gr(e.style,r,t[r])}else if(r[0]==="o"&&r[1]==="n")i=r!==(r=r.replace(/(PointerCapture)$|Capture$/i,"$1")),r=r.toLowerCase()in e||r==="onFocusOut"||r==="onFocusIn"?r.toLowerCase().slice(2):r.slice(2),e.l||(e.l={}),e.l[r+i]=t,t?s?t.u=s.u:(t.u=Ke,e.addEventListener(r,i?$e:je,i)):e.removeEventListener(r,i?$e:je,i);else{if(o=="http://www.w3.org/2000/svg")r=r.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(r!="width"&&r!="height"&&r!="href"&&r!="list"&&r!="form"&&r!="tabIndex"&&r!="download"&&r!="rowSpan"&&r!="colSpan"&&r!="role"&&r!="popover"&&r in e)try{e[r]=t??"";break e}catch{}typeof t=="function"||(t==null||t===!1&&r[4]!=="-"?e.removeAttribute(r):e.setAttribute(r,r=="popover"&&t==1?"":t))}}function Or(e){return function(r){if(this.l){var t=this.l[r.type+e];if(r.t==null)r.t=Ke++;else if(r.t<t.u)return;return t(C.event?C.event(r):r)}}}function Je(e,r,t,s,o,i,a,l,g,h){var _,c,k,E,R,F,w,P,O,N,j,H,L,B,y,G,A=r.type;if(r.constructor!==void 0)return null;128&t.__u&&(g=!!(32&t.__u),i=[l=r.__e=t.__e]),(_=C.__b)&&_(r);e:if(typeof A=="function")try{if(P=r.props,O="prototype"in A&&A.prototype.render,N=(_=A.contextType)&&s[_.__c],j=_?N?N.props.value:_.__:s,t.__c?w=(c=r.__c=t.__c).__=c.__E:(O?r.__c=c=new A(P,j):(r.__c=c=new le(P,j),c.constructor=A,c.render=Yt),N&&N.sub(c),c.props=P,c.state||(c.state={}),c.context=j,c.__n=s,k=c.__d=!0,c.__h=[],c._sb=[]),O&&c.__s==null&&(c.__s=c.state),O&&A.getDerivedStateFromProps!=null&&(c.__s==c.state&&(c.__s=Q({},c.__s)),Q(c.__s,A.getDerivedStateFromProps(P,c.__s))),E=c.props,R=c.state,c.__v=r,k)O&&A.getDerivedStateFromProps==null&&c.componentWillMount!=null&&c.componentWillMount(),O&&c.componentDidMount!=null&&c.__h.push(c.componentDidMount);else{if(O&&A.getDerivedStateFromProps==null&&P!==E&&c.componentWillReceiveProps!=null&&c.componentWillReceiveProps(P,j),!c.__e&&(c.shouldComponentUpdate!=null&&c.shouldComponentUpdate(P,c.__s,j)===!1||r.__v===t.__v)){for(r.__v!==t.__v&&(c.props=P,c.state=c.__s,c.__d=!1),r.__e=t.__e,r.__k=t.__k,r.__k.forEach(function(U){U&&(U.__=r)}),H=0;H<c._sb.length;H++)c.__h.push(c._sb[H]);c._sb=[],c.__h.length&&a.push(c);break e}c.componentWillUpdate!=null&&c.componentWillUpdate(P,c.__s,j),O&&c.componentDidUpdate!=null&&c.__h.push(function(){c.componentDidUpdate(E,R,F)})}if(c.context=j,c.props=P,c.__P=e,c.__e=!1,L=C.__r,B=0,O){for(c.state=c.__s,c.__d=!1,L&&L(r),_=c.render(c.props,c.state,c.context),y=0;y<c._sb.length;y++)c.__h.push(c._sb[y]);c._sb=[]}else do c.__d=!1,L&&L(r),_=c.render(c.props,c.state,c.context),c.state=c.__s;while(c.__d&&++B<25);c.state=c.__s,c.getChildContext!=null&&(s=Q(Q({},s),c.getChildContext())),O&&!k&&c.getSnapshotBeforeUpdate!=null&&(F=c.getSnapshotBeforeUpdate(E,R)),it(e,ye(G=_!=null&&_.type===he&&_.key==null?_.props.children:_)?G:[G],r,t,s,o,i,a,l,g,h),c.base=r.__e,r.__u&=-161,c.__h.length&&a.push(c),w&&(c.__E=c.__=null)}catch(U){if(r.__v=null,g||i!=null){for(r.__u|=g?160:32;l&&l.nodeType===8&&l.nextSibling;)l=l.nextSibling;i[i.indexOf(l)]=null,r.__e=l}else r.__e=t.__e,r.__k=t.__k;C.__e(U,r,t)}else i==null&&r.__v===t.__v?(r.__k=t.__k,r.__e=t.__e):r.__e=Jt(t.__e,r,t,s,o,i,a,g,h);(_=C.diffed)&&_(r)}function ct(e,r,t){r.__d=void 0;for(var s=0;s<t.length;s++)Ye(t[s],t[++s],t[++s]);C.__c&&C.__c(r,e),e.some(function(o){try{e=o.__h,o.__h=[],e.some(function(i){i.call(o)})}catch(i){C.__e(i,o.__v)}})}function Jt(e,r,t,s,o,i,a,l,g){var h,_,c,k,E,R,F,w=t.props,P=r.props,O=r.type;if(O==="svg"?o="http://www.w3.org/2000/svg":O==="math"?o="http://www.w3.org/1998/Math/MathML":o||(o="http://www.w3.org/1999/xhtml"),i!=null){for(h=0;h<i.length;h++)if((E=i[h])&&"setAttribute"in E==!!O&&(O?E.localName===O:E.nodeType===3)){e=E,i[h]=null;break}}if(e==null){if(O===null)return document.createTextNode(P);e=document.createElementNS(o,O,P.is&&P),i=null,l=!1}if(O===null)w===P||l&&e.data===P||(e.data=P);else{if(i=i&&ge.call(e.childNodes),w=t.props||pe,!l&&i!=null)for(w={},h=0;h<e.attributes.length;h++)w[(E=e.attributes[h]).name]=E.value;for(h in w)if(E=w[h],h!="children"){if(h=="dangerouslySetInnerHTML")c=E;else if(h!=="key"&&!(h in P)){if(h=="value"&&"defaultValue"in P||h=="checked"&&"defaultChecked"in P)continue;_e(e,h,null,E,o)}}for(h in P)E=P[h],h=="children"?k=E:h=="dangerouslySetInnerHTML"?_=E:h=="value"?R=E:h=="checked"?F=E:h==="key"||l&&typeof E!="function"||w[h]===E||_e(e,h,E,w[h],o);if(_)l||c&&(_.__html===c.__html||_.__html===e.innerHTML)||(e.innerHTML=_.__html),r.__k=[];else if(c&&(e.innerHTML=""),it(e,ye(k)?k:[k],r,t,s,O==="foreignObject"?"http://www.w3.org/1999/xhtml":o,i,a,i?i[0]:t.__k&&ee(t,0),l,g),i!=null)for(h=i.length;h--;)i[h]!=null&&ot(i[h]);l||(h="value",R!==void 0&&(R!==e[h]||O==="progress"&&!R||O==="option"&&R!==w[h])&&_e(e,h,R,w[h],o),h="checked",F!==void 0&&F!==e[h]&&_e(e,h,F,w[h],o))}return e}function Ye(e,r,t){try{if(typeof e=="function"){var s=typeof e.__u=="function";s&&e.__u(),s&&r==null||(e.__u=e(r))}else e.current=r}catch(o){C.__e(o,t)}}function He(e,r,t){var s,o;if(C.unmount&&C.unmount(e),(s=e.ref)&&(s.current&&s.current!==e.__e||Ye(s,null,r)),(s=e.__c)!=null){if(s.componentWillUnmount)try{s.componentWillUnmount()}catch(i){C.__e(i,r)}s.base=s.__P=null}if(s=e.__k)for(o=0;o<s.length;o++)s[o]&&He(s[o],r,t||typeof e.type!="function");t||e.__e==null||ot(e.__e),e.__c=e.__=e.__e=e.__d=void 0}function Yt(e,r,t){return this.constructor(e,t)}function Xt(e,r,t){var s,o,i,a;C.__&&C.__(e,r),o=(s=typeof t=="function")?null:r.__k,i=[],a=[],Je(r,e=(!s&&t||r).__k=Qe(he,null,[e]),o||pe,pe,r.namespaceURI,!s&&t?[t]:o?null:r.firstChild?ge.call(r.childNodes):null,i,!s&&t?t:o?o.__e:r.firstChild,s,a),ct(i,e,a)}function Zt(e,r,t){var s,o,i,a,l=Q({},e.props);for(i in e.type&&e.type.defaultProps&&(a=e.type.defaultProps),r)i=="key"?s=r[i]:i=="ref"?o=r[i]:l[i]=r[i]===void 0&&a!==void 0?a[i]:r[i];return arguments.length>2&&(l.children=arguments.length>3?ge.call(arguments,2):t),ce(e.type,l,s||e.key,o||e.ref,null)}function es(e,r){var t={__c:r="__cC"+tt++,__:e,Consumer:function(s,o){return s.children(o)},Provider:function(s){var o,i;return this.getChildContext||(o=[],(i={})[r]=this,this.getChildContext=function(){return i},this.componentWillUnmount=function(){o=null},this.shouldComponentUpdate=function(a){this.props.value!==a.value&&o.some(function(l){l.__e=!0,qe(l)})},this.sub=function(a){o.push(a);var l=a.componentWillUnmount;a.componentWillUnmount=function(){o&&o.splice(o.indexOf(a),1),l&&l.call(a)}}),s.children}};return t.Provider.__=t.Consumer.contextType=t}ge=st.slice,C={__e:function(e,r,t,s){for(var o,i,a;r=r.__;)if((o=r.__c)&&!o.__)try{if((i=o.constructor)&&i.getDerivedStateFromError!=null&&(o.setState(i.getDerivedStateFromError(e)),a=o.__d),o.componentDidCatch!=null&&(o.componentDidCatch(e,s||{}),a=o.__d),a)return o.__E=o}catch(l){e=l}throw e}},et=0,le.prototype.setState=function(e,r){var t;t=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=Q({},this.state),typeof e=="function"&&(e=e(Q({},t),this.props)),e&&Q(t,e),e!=null&&this.__v&&(r&&this._sb.push(r),qe(this))},le.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),qe(this))},le.prototype.render=he,Y=[],rt=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,xe=function(e,r){return e.__v.__b-r.__v.__b},ve.__r=0,Ke=0,je=Or(!1),$e=Or(!0),tt=0;var rs=0;function T(e,r,t,s,o,i){r||(r={});var a,l,g=r;if("ref"in g)for(l in g={},r)l=="ref"?a=r[l]:g[l]=r[l];var h={type:e,props:g,key:t,ref:a,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--rs,__i:-1,__u:0,__source:o,__self:i};if(typeof e=="function"&&(a=e.defaultProps))for(l in a)g[l]===void 0&&(g[l]=a[l]);return C.vnode&&C.vnode(h),h}var de,D,Ae,Rr,be=0,lt=[],I=C,Ar=I.__b,Sr=I.__r,Fr=I.diffed,Cr=I.__c,Ur=I.unmount,Dr=I.__;function Xe(e,r){I.__h&&I.__h(D,e,be||r),be=0;var t=D.__H||(D.__H={__:[],__h:[]});return e>=t.__.length&&t.__.push({}),t.__[e]}function Se(e){return be=1,ts(dt,e)}function ts(e,r,t){var s=Xe(de++,2);if(s.t=e,!s.__c&&(s.__=[dt(void 0,r),function(l){var g=s.__N?s.__N[0]:s.__[0],h=s.t(g,l);g!==h&&(s.__N=[h,s.__[1]],s.__c.setState({}))}],s.__c=D,!D.u)){var o=function(l,g,h){if(!s.__c.__H)return!0;var _=s.__c.__H.__.filter(function(k){return!!k.__c});if(_.every(function(k){return!k.__N}))return!i||i.call(this,l,g,h);var c=!1;return _.forEach(function(k){if(k.__N){var E=k.__[0];k.__=k.__N,k.__N=void 0,E!==k.__[0]&&(c=!0)}}),!(!c&&s.__c.props===l)&&(!i||i.call(this,l,g,h))};D.u=!0;var i=D.shouldComponentUpdate,a=D.componentWillUpdate;D.componentWillUpdate=function(l,g,h){if(this.__e){var _=i;i=void 0,o(l,g,h),i=_}a&&a.call(this,l,g,h)},D.shouldComponentUpdate=o}return s.__N||s.__}function ut(e,r){var t=Xe(de++,3);!I.__s&&pt(t.__H,r)&&(t.__=e,t.i=r,D.__H.__h.push(t))}function ss(e){return be=5,os(function(){return{current:e}},[])}function os(e,r){var t=Xe(de++,7);return pt(t.__H,r)&&(t.__=e(),t.__H=r,t.__h=e),t.__}function ns(){for(var e;e=lt.shift();)if(e.__P&&e.__H)try{e.__H.__h.forEach(Te),e.__H.__h.forEach(Me),e.__H.__h=[]}catch(r){e.__H.__h=[],I.__e(r,e.__v)}}I.__b=function(e){D=null,Ar&&Ar(e)},I.__=function(e,r){e&&r.__k&&r.__k.__m&&(e.__m=r.__k.__m),Dr&&Dr(e,r)},I.__r=function(e){Sr&&Sr(e),de=0;var r=(D=e.__c).__H;r&&(Ae===D?(r.__h=[],D.__h=[],r.__.forEach(function(t){t.__N&&(t.__=t.__N),t.i=t.__N=void 0})):(r.__h.forEach(Te),r.__h.forEach(Me),r.__h=[],de=0)),Ae=D},I.diffed=function(e){Fr&&Fr(e);var r=e.__c;r&&r.__H&&(r.__H.__h.length&&(lt.push(r)!==1&&Rr===I.requestAnimationFrame||((Rr=I.requestAnimationFrame)||is)(ns)),r.__H.__.forEach(function(t){t.i&&(t.__H=t.i),t.i=void 0})),Ae=D=null},I.__c=function(e,r){r.some(function(t){try{t.__h.forEach(Te),t.__h=t.__h.filter(function(s){return!s.__||Me(s)})}catch(s){r.some(function(o){o.__h&&(o.__h=[])}),r=[],I.__e(s,t.__v)}}),Cr&&Cr(e,r)},I.unmount=function(e){Ur&&Ur(e);var r,t=e.__c;t&&t.__H&&(t.__H.__.forEach(function(s){try{Te(s)}catch(o){r=o}}),t.__H=void 0,r&&I.__e(r,t.__v))};var Lr=typeof requestAnimationFrame=="function";function is(e){var r,t=function(){clearTimeout(s),Lr&&cancelAnimationFrame(r),setTimeout(e)},s=setTimeout(t,100);Lr&&(r=requestAnimationFrame(t))}function Te(e){var r=D,t=e.__c;typeof t=="function"&&(e.__c=void 0,t()),D=r}function Me(e){var r=D;e.__c=e.__(),D=r}function pt(e,r){return!e||e.length!==r.length||r.some(function(t,s){return t!==e[s]})}function dt(e,r){return typeof r=="function"?r(e):r}var as={};function fe(e,r){for(var t in r)e[t]=r[t];return e}function cs(e,r,t){var s,o=/(?:\?([^#]*))?(#.*)?$/,i=e.match(o),a={};if(i&&i[1])for(var l=i[1].split("&"),g=0;g<l.length;g++){var h=l[g].split("=");a[decodeURIComponent(h[0])]=decodeURIComponent(h.slice(1).join("="))}e=We(e.replace(o,"")),r=We(r||"");for(var _=Math.max(e.length,r.length),c=0;c<_;c++)if(r[c]&&r[c].charAt(0)===":"){var k=r[c].replace(/(^:|[+*?]+$)/g,""),E=(r[c].match(/[+*?]+$/)||as)[0]||"",R=~E.indexOf("+"),F=~E.indexOf("*"),w=e[c]||"";if(!w&&!F&&(E.indexOf("?")<0||R)){s=!1;break}if(a[k]=decodeURIComponent(w),R||F){a[k]=e.slice(c).map(decodeURIComponent).join("/");break}}else if(r[c]!==e[c]){s=!1;break}return(t.default===!0||s!==!1)&&a}function ls(e,r){return e.rank<r.rank?1:e.rank>r.rank?-1:e.index-r.index}function us(e,r){return e.index=r,e.rank=function(t){return t.props.default?0:We(t.props.path).map(ps).join("")}(e),e.props}function We(e){return e.replace(/(^\/+|\/+$)/g,"").split("/")}function ps(e){return e.charAt(0)==":"?1+"*+?".indexOf(e.charAt(e.length-1))||4:5}var ds={},X=[],Ir=[],M=null,gt={url:Ze()},gs=es(gt);function Ze(){var e;return""+((e=M&&M.location?M.location:M&&M.getCurrentLocation?M.getCurrentLocation():typeof location<"u"?location:ds).pathname||"")+(e.search||"")}function ht(e,r){return r===void 0&&(r=!1),typeof e!="string"&&e.url&&(r=e.replace,e=e.url),function(t){for(var s=X.length;s--;)if(X[s].canRoute(t))return!0;return!1}(e)&&function(t,s){s===void 0&&(s="push"),M&&M[s]?M[s](t):typeof history<"u"&&history[s+"State"]&&history[s+"State"](null,null,t)}(e,r?"replace":"push"),mt(e)}function mt(e){for(var r=!1,t=0;t<X.length;t++)X[t].routeTo(e)&&(r=!0);return r}function hs(e){if(e&&e.getAttribute){var r=e.getAttribute("href"),t=e.getAttribute("target");if(r&&r.match(/^\//g)&&(!t||t.match(/^_?self$/i)))return ht(r)}}function ms(e){return e.stopImmediatePropagation&&e.stopImmediatePropagation(),e.stopPropagation&&e.stopPropagation(),e.preventDefault(),!1}function _s(e){if(!(e.ctrlKey||e.metaKey||e.altKey||e.shiftKey||e.button)){var r=e.target;do if(r.localName==="a"&&r.getAttribute("href")){if(r.hasAttribute("data-native")||r.hasAttribute("native"))return;if(hs(r))return ms(e)}while(r=r.parentNode)}}var xr=!1;function _t(e){e.history&&(M=e.history),this.state={url:e.url||Ze()}}fe(_t.prototype=new le,{shouldComponentUpdate:function(e){return e.static!==!0||e.url!==this.props.url||e.onChange!==this.props.onChange},canRoute:function(e){var r=Ne(this.props.children);return this.g(r,e)!==void 0},routeTo:function(e){this.setState({url:e});var r=this.canRoute(e);return this.p||this.forceUpdate(),r},componentWillMount:function(){this.p=!0},componentDidMount:function(){var e=this;xr||(xr=!0,M||addEventListener("popstate",function(){mt(Ze())}),addEventListener("click",_s)),X.push(this),M&&(this.u=M.listen(function(r){var t=r.location||r;e.routeTo(""+(t.pathname||"")+(t.search||""))})),this.p=!1},componentWillUnmount:function(){typeof this.u=="function"&&this.u(),X.splice(X.indexOf(this),1)},componentWillUpdate:function(){this.p=!0},componentDidUpdate:function(){this.p=!1},g:function(e,r){e=e.filter(us).sort(ls);for(var t=0;t<e.length;t++){var s=e[t],o=cs(r,s.props.path,s.props);if(o)return[s,o]}},render:function(e,r){var t,s,o=e.onChange,i=r.url,a=this.c,l=this.g(Ne(e.children),i);if(l&&(s=Zt(l[0],fe(fe({url:i,matches:t=l[1]},t),{key:void 0,ref:void 0}))),i!==(a&&a.url)){fe(gt,a=this.c={url:i,previous:a&&a.url,current:s,path:s?s.props.path:null,matches:t}),a.router=this,a.active=s?[s]:[];for(var g=Ir.length;g--;)Ir[g]({});typeof o=="function"&&o(a)}return Qe(gs.Provider,{value:a},s)}});var jr=function(e){return Qe(e.component,e)};const fs=T("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-arrow-left",children:[T("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),T("path",{d:"M5 12l14 0"}),T("path",{d:"M5 12l6 6"}),T("path",{d:"M5 12l6 -6"})]}),Es=T("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-arrow-right",children:[T("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),T("path",{d:"M5 12l14 0"}),T("path",{d:"M13 18l6 -6"}),T("path",{d:"M13 6l6 6"})]}),Ts=T("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-brand-windows",children:[T("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),T("path",{d:"M17.8 20l-12 -1.5c-1 -.1 -1.8 -.9 -1.8 -1.9v-9.2c0 -1 .8 -1.8 1.8 -1.9l12 -1.5c1.2 -.1 2.2 .8 2.2 1.9v12.1c0 1.2 -1.1 2.1 -2.2 1.9z"}),T("path",{d:"M12 5l0 14"}),T("path",{d:"M4 12l16 0"})]}),vs=T("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-apple",children:[T("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),T("path",{d:"M4 11.319c0 3.102 .444 5.319 2.222 7.978c1.351 1.797 3.156 2.247 5.08 .988c.426 -.268 .97 -.268 1.397 0c1.923 1.26 3.728 .809 5.079 -.988c1.778 -2.66 2.222 -4.876 2.222 -7.977c0 -2.661 -1.99 -5.32 -4.444 -5.32c-1.267 0 -2.41 .693 -3.22 1.44a.5 .5 0 0 1 -.672 0c-.809 -.746 -1.953 -1.44 -3.22 -1.44c-2.454 0 -4.444 2.66 -4.444 5.319"}),T("path",{d:"M7 12c0 -1.47 .454 -2.34 1.5 -3"}),T("path",{d:"M12 7c0 -1.2 .867 -4 3 -4"})]}),$r=T("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-brand-github",children:[T("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),T("path",{d:"M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"})]}),bs=T("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-tip-jar",children:[T("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),T("path",{d:"M14 10h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5"}),T("path",{d:"M12 9v1"}),T("path",{d:"M12 16v1"}),T("path",{d:"M17 4v1.882c0 .685 .387 1.312 1 1.618s1 .933 1 1.618v8.882a3 3 0 0 1 -3 3h-8a3 3 0 0 1 -3 -3v-8.882c0 -.685 .387 -1.312 1 -1.618s1 -.933 1 -1.618v-1.882"}),T("path",{d:"M6 4h12z"})]});function ke(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function er(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce((o,i)=>er.bind(null,e,i,o,s),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((o,i)=>i.hook.bind(null,o,s),t)():t(s))}function ws(e,r,t,s){const o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=(i,a)=>Promise.resolve().then(o.bind(null,a)).then(i.bind(null,a))),r==="after"&&(s=(i,a)=>{let l;return Promise.resolve().then(i.bind(null,a)).then(g=>(l=g,o(l,a))).then(()=>l)}),r==="error"&&(s=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(l=>o(l,a))),e.registry[t].push({hook:s,orig:o})}function ys(e,r,t){if(!e.registry[r])return;const s=e.registry[r].map(o=>o.orig).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}const qr=Function.bind,Nr=qr.bind(qr);function ft(e,r,t){const s=Nr(ys,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{const i=t?[r,o,t]:[r,o];e[o]=e.api[o]=Nr(ws,null).apply(null,i)})}function ks(){const e=Symbol("Singular"),r={registry:{}},t=er.bind(null,r,e);return ft(t,r,e),t}function Ps(){const e={registry:{}},r=er.bind(null,e);return ft(r,e),r}const Gs={Singular:ks,Collection:Ps};var Os="0.0.0-development",Rs=`octokit-endpoint.js/${Os} ${ke()}`,As={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":Rs},mediaType:{format:""}};function Ss(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function Fs(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function Et(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(s=>{Fs(r[s])?s in e?t[s]=Et(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function Hr(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function Be(e,r,t){var o;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=Ss(t.headers),Hr(t),Hr(t.headers);const s=Et(e||{},t);return t.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(i=>!s.mediaType.previews.includes(i)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),s}function Cs(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var Us=/\{[^}]+\}/g;function Ds(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Ls(e){const r=e.match(Us);return r?r.map(Ds).reduce((t,s)=>t.concat(s),[]):[]}function Mr(e,r){const t={__proto__:null};for(const s of Object.keys(e))r.indexOf(s)===-1&&(t[s]=e[s]);return t}function Tt(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function te(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function ie(e,r,t){return r=e==="+"||e==="#"?Tt(r):te(r),t?te(t)+"="+r:r}function re(e){return e!=null}function Fe(e){return e===";"||e==="&"||e==="?"}function Is(e,r,t,s){var o=e[t],i=[];if(re(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(ie(r,o,Fe(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(re).forEach(function(a){i.push(ie(r,a,Fe(r)?t:""))}):Object.keys(o).forEach(function(a){re(o[a])&&i.push(ie(r,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(re).forEach(function(l){a.push(ie(r,l))}):Object.keys(o).forEach(function(l){re(o[l])&&(a.push(te(l)),a.push(ie(r,o[l].toString())))}),Fe(r)?i.push(te(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?re(o)&&i.push(te(t)):o===""&&(r==="&"||r==="?")?i.push(te(t)+"="):o===""&&i.push("");return i}function xs(e){return{expand:js.bind(null,e)}}function js(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let l="";const g=[];if(t.indexOf(o.charAt(0))!==-1&&(l=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(h){var _=/([^:\*]*)(?::(\d+)|(\*))?/.exec(h);g.push(Is(r,l,_[1],_[2]||_[3]))}),l&&l!=="+"){var a=",";return l==="?"?a="&":l!=="#"&&(a=l),(g.length!==0?l:"")+g.join(a)}else return g.join(",")}else return Tt(i)}),e==="/"?e:e.replace(/\/$/,"")}function vt(e){var _;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=Mr(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Ls(t);t=xs(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const l=Object.keys(e).filter(c=>a.includes(c)).concat("baseUrl"),g=Mr(i,l);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(c=>c.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(_=e.mediaType.previews)!=null&&_.length)){const c=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=c.concat(e.mediaType.previews).map(k=>{const E=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${k}-preview${E}`}).join(",")}return["GET","HEAD"].includes(r)?t=Cs(t,g):"data"in g?o=g.data:Object.keys(g).length&&(o=g),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o>"u"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function $s(e,r,t){return vt(Be(e,r,t))}function bt(e,r){const t=Be(e,r),s=$s.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:bt.bind(null,t),merge:Be.bind(null,t),parse:vt})}var qs=bt(null,As);class ae extends Error{constructor(t,s,o){super(t);x(this,"name");x(this,"status");x(this,"request");x(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in o&&(this.response=o.response);const i=Object.assign({},o.request);o.request.headers.authorization&&(i.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var Ns="0.0.0-development",Hs={headers:{"user-agent":`octokit-request.js/${Ns} ${ke()}`}};function Ms(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function Wr(e){var c,k,E,R,F;const r=((c=e.request)==null?void 0:c.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((k=e.request)==null?void 0:k.log)||console,s=((E=e.request)==null?void 0:E.parseSuccessResponseBody)!==!1,o=Ms(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([w,P])=>[w,String(P)]));let a;try{a=await r(e.url,{method:e.method,body:o,redirect:(R=e.request)==null?void 0:R.redirect,headers:i,signal:(F=e.request)==null?void 0:F.signal,...e.body&&{duplex:"half"}})}catch(w){let P="Unknown Error";if(w instanceof Error){if(w.name==="AbortError")throw w.status=500,w;P=w.message,w.name==="TypeError"&&"cause"in w&&(w.cause instanceof Error?P=w.cause.message:typeof w.cause=="string"&&(P=w.cause))}const O=new ae(P,500,{request:e});throw O.cause=w,O}const l=a.status,g=a.url,h={};for(const[w,P]of a.headers)h[w]=P;const _={url:g,status:l,headers:h,data:""};if("deprecation"in h){const w=h.link&&h.link.match(/<([^>]+)>; rel="deprecation"/),P=w&&w.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${h.sunset}${P?`. See ${P}`:""}`)}if(l===204||l===205)return _;if(e.method==="HEAD"){if(l<400)return _;throw new ae(a.statusText,l,{response:_,request:e})}if(l===304)throw _.data=await Ce(a),new ae("Not modified",l,{response:_,request:e});if(l>=400)throw _.data=await Ce(a),new ae(Ws(_.data),l,{response:_,request:e});return _.data=s?await Ce(a):a.body,_}async function Ce(e){const r=e.headers.get("content-type");return/application\/json/.test(r)?e.json().catch(()=>e.text()).catch(()=>""):!r||/^text\/|charset=utf-8$/.test(r)?e.text():e.arrayBuffer()}function Ws(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function Ve(e,r){const t=e.defaults(r);return Object.assign(function(o,i){const a=t.merge(o,i);if(!a.request||!a.request.hook)return Wr(t.parse(a));const l=(g,h)=>Wr(t.parse(t.merge(g,h)));return Object.assign(l,{endpoint:t,defaults:Ve.bind(null,t)}),a.request.hook(l,a)},{endpoint:t,defaults:Ve.bind(null,t)})}var ze=Ve(qs,Hs),Bs="0.0.0-development";function Vs(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var zs=class extends Error{constructor(r,t,s){super(Vs(s));x(this,"name","GraphqlResponseError");x(this,"errors");x(this,"data");this.request=r,this.headers=t,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Ks=["method","baseUrl","url","headers","request","query","mediaType"],Qs=["query","method","url"],Br=/\/api\/v3\/?$/;function Js(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(Qs.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((a,l)=>Ks.includes(l)?(a[l]=s[l],a):(a.variables||(a.variables={}),a.variables[l]=s[l],a),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Br.test(i)&&(o.url=i.replace(Br,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const l={};for(const g of Object.keys(a.headers))l[g]=a.headers[g];throw new zs(o,l,a.data)}return a.data.data})}function rr(e,r){const t=e.defaults(r);return Object.assign((o,i)=>Js(t,o,i),{defaults:rr.bind(null,t),endpoint:t.endpoint})}rr(ze,{headers:{"user-agent":`octokit-graphql.js/${Bs} ${ke()}`},method:"POST",url:"/graphql"});function Ys(e){return rr(e,{method:"POST",url:"/graphql"})}var Xs=/^v1\./,Zs=/^ghs_/,eo=/^ghu_/;async function ro(e){const r=e.split(/\./).length===3,t=Xs.test(e)||Zs.test(e),s=eo.test(e);return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}function to(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function so(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=to(e),r(o)}var oo=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(ro.bind(null,r),{hook:so.bind(null,r)})};const wt="6.1.2",Vr=()=>{},no=console.warn.bind(console),io=console.error.bind(console),zr=`octokit-core.js/${wt} ${ke()}`;var Ee;let ao=(Ee=class{constructor(r={}){x(this,"request");x(this,"graphql");x(this,"log");x(this,"hook");x(this,"auth");const t=new Gs.Collection,s={baseUrl:ze.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=r.userAgent?`${r.userAgent} ${zr}`:zr,r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=ze.defaults(s),this.graphql=Ys(this.request).defaults(s),this.log=Object.assign({debug:Vr,info:Vr,warn:no,error:io},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,l=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",l.hook),this.auth=l}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=oo(r.auth);t.wrap("request",i.hook),this.auth=i}const o=this.constructor;for(let i=0;i<o.plugins.length;++i)Object.assign(this,o.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...s){const o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var o;const t=this.plugins;return o=class extends this{},x(o,"plugins",t.concat(r.filter(i=>!t.includes(i)))),o}},x(Ee,"VERSION",wt),x(Ee,"plugins",[]),Ee);var co="0.0.0-development";function lo(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const i=Object.keys(e.data)[0],a=e.data[i];return e.data=a,typeof t<"u"&&(e.data.incomplete_results=t),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function tr(e,r,t){const s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,i=s.method,a=s.headers;let l=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!l)return{done:!0};try{const g=await o({method:i,url:l,headers:a}),h=lo(g);return l=((h.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:h}}catch(g){if(g.status!==409)throw g;return l="",{value:{status:200,headers:{},data:[]}}}}})}}function yt(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),kt(e,[],tr(e,r,t)[Symbol.asyncIterator](),s)}function kt(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let i=!1;function a(){i=!0}return r=r.concat(s?s(o.value,a):o.value.data),i?r:kt(e,r,t,s)})}Object.assign(yt,{iterator:tr});function Pt(e){return{paginate:Object.assign(yt.bind(null,e),{iterator:tr.bind(null,e)})}}Pt.VERSION=co;var uo=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,po=class extends Error{constructor(r,t){super(uo(r.pathInQuery,t));x(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},go=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);x(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},ho=e=>Object.prototype.toString.call(e)==="[object Object]";function Gt(e){const r=Ot(e,"pageInfo");if(r.length===0)throw new go(e);return r}var Ot=(e,r,t=[])=>{for(const s of Object.keys(e)){const o=[...t,s],i=e[s];if(i.hasOwnProperty(r))return o;if(ho(i)){const a=Ot(i,r,o);if(a.length>0)return a}}return[]},ue=(e,r)=>r.reduce((t,s)=>t[s],e),Ue=(e,r,t)=>{const s=r[r.length-1],o=[...r].slice(0,-1),i=ue(e,o);typeof t=="function"?i[s]=t(i[s]):i[s]=t},mo=e=>{const r=Gt(e);return{pathInQuery:r,pageInfo:ue(e,[...r,"pageInfo"])}},Rt=e=>e.hasOwnProperty("hasNextPage"),_o=e=>Rt(e)?e.endCursor:e.startCursor,fo=e=>Rt(e)?e.hasNextPage:e.hasPreviousPage,At=e=>(r,t={})=>{let s=!0,o={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const i=await e.graphql(r,o),a=mo(i),l=_o(a.pageInfo);if(s=fo(a.pageInfo),s&&l===o.cursor)throw new po(a,l);return o={...o,cursor:l},{done:!1,value:i}}})}},Eo=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=Gt(e),s=[...t,"nodes"],o=ue(r,s);o&&Ue(e,s,g=>[...g,...o]);const i=[...t,"edges"],a=ue(r,i);a&&Ue(e,i,g=>[...g,...a]);const l=[...t,"pageInfo"];return Ue(e,l,ue(r,l)),e},To=e=>{const r=At(e);return async(t,s={})=>{let o={};for await(const i of r(t,s))o=Eo(o,i);return o}};function vo(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(To(e),{iterator:At(e)})})}}const bo="13.2.4",wo={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var yo=wo;const Z=new Map;for(const[e,r]of Object.entries(yo))for(const[t,s]of Object.entries(r)){const[o,i,a]=s,[l,g]=o.split(/ /),h=Object.assign({method:l,url:g},i);Z.has(e)||Z.set(e,new Map),Z.get(e).set(t,{scope:e,methodName:t,endpointDefaults:h,decorations:a})}const ko={has({scope:e},r){return Z.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[...Z.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];const o=Z.get(r).get(s);if(!o)return;const{endpointDefaults:i,decorations:a}=o;return a?t[s]=Go(e,r,s,i,a):t[s]=e.request.defaults(i),t[s]}};function Po(e){const r={};for(const t of Z.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},ko);return r}function Go(e,r,t,s,o){const i=e.request.defaults(s);function a(...l){let g=i.endpoint.merge(...l);if(o.mapToData)return g=Object.assign({},g,{data:g[o.mapToData],[o.mapToData]:void 0}),i(g);if(o.renamed){const[h,_]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${h}.${_}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const h=i.endpoint.merge(...l);for(const[_,c]of Object.entries(o.renamedParameters))_ in h&&(e.log.warn(`"${_}" parameter is deprecated for "octokit.${r}.${t}()". Use "${c}" instead`),c in h||(h[c]=h[_]),delete h[_]);return i(h)}return i(...l)}return Object.assign(a,i)}function St(e){return{rest:Po(e)}}St.VERSION=bo;var De=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Oo(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Ft={exports:{}};(function(e,r){(function(t,s){e.exports=s()})(De,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof De<"u"?De:typeof self<"u"?self:{};function s(b){return b&&b.default||b}var o=function(b,u,n={}){var p,d,m;for(p in u)m=u[p],n[p]=(d=b[p])!=null?d:m;return n},i=function(b,u,n={}){var p,d;for(p in b)d=b[p],u[p]!==void 0&&(n[p]=d);return n},a={load:o,overwrite:i},l;l=class{constructor(u,n){this.incr=u,this.decr=n,this._first=null,this._last=null,this.length=0}push(u){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:u,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var u;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),u=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,u}first(){if(this._first!=null)return this._first.value}getArray(){var u,n,p;for(u=this._first,p=[];u!=null;)p.push((n=u,u=u.next,n.value));return p}forEachShift(u){var n;for(n=this.shift();n!=null;)u(n),n=this.shift()}debug(){var u,n,p,d,m;for(u=this._first,m=[];u!=null;)m.push((n=u,u=u.next,{value:n.value,prev:(p=n.prev)!=null?p.value:void 0,next:(d=n.next)!=null?d.value:void 0}));return m}};var g=l,h;h=class{constructor(u){if(this.instance=u,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,p)=>this._addListener(n,"many",p),this.instance.once=(n,p)=>this._addListener(n,"once",p),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(u,n,p){var d;return(d=this._events)[u]==null&&(d[u]=[]),this._events[u].push({cb:p,status:n}),this.instance}listenerCount(u){return this._events[u]!=null?this._events[u].length:0}async trigger(u,...n){var p,d;try{return u!=="debug"&&this.trigger("debug",`Event triggered: ${u}`,n),this._events[u]==null?void 0:(this._events[u]=this._events[u].filter(function(m){return m.status!=="none"}),d=this._events[u].map(async m=>{var f,v;if(m.status!=="none"){m.status==="once"&&(m.status="none");try{return v=typeof m.cb=="function"?m.cb(...n):void 0,typeof(v!=null?v.then:void 0)=="function"?await v:v}catch(S){return f=S,this.trigger("error",f),null}}}),(await Promise.all(d)).find(function(m){return m!=null}))}catch(m){return p=m,this.trigger("error",p),null}}};var _=h,c,k,E;c=g,k=_,E=class{constructor(u){this.Events=new k(this),this._length=0,this._lists=(function(){var n,p,d;for(d=[],n=1,p=u;1<=p?n<=p:n>=p;1<=p?++n:--n)d.push(new c(()=>this.incr(),()=>this.decr()));return d}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(u){return this._lists[u.options.priority].push(u)}queued(u){return u!=null?this._lists[u].length:this._length}shiftAll(u){return this._lists.forEach(function(n){return n.forEachShift(u)})}getFirst(u=this._lists){var n,p,d;for(n=0,p=u.length;n<p;n++)if(d=u[n],d.length>0)return d;return[]}shiftLastFrom(u){return this.getFirst(this._lists.slice(u).reverse()).shift()}};var R=E,F;F=class extends Error{};var w=F,P,O,N,j,H;j=10,O=5,H=a,P=w,N=class{constructor(u,n,p,d,m,f,v,S){this.task=u,this.args=n,this.rejectOnDrop=m,this.Events=f,this._states=v,this.Promise=S,this.options=H.load(p,d),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===d.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise(($,q)=>{this._resolve=$,this._reject=q}),this.retryCount=0}_sanitizePriority(u){var n;return n=~~u!==u?O:u,n<0?0:n>j-1?j-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:u,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(u??new P(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(u){var n;if(n=this._states.jobStatus(this.options.id),!(n===u||u==="DONE"&&n===null))throw new P(`Invalid job status ${n}, expected ${u}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(u,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:u,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(u,n,p,d){var m,f,v;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),f={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",f);try{if(v=await(u!=null?u.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(f),await d(this.options,f),this._assertStatus("DONE"),this._resolve(v)}catch(S){return m=S,this._onFailure(m,f,n,p,d)}}doExpire(u,n,p){var d,m;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},d=new P(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(d,m,u,n,p)}async _onFailure(u,n,p,d,m){var f,v;if(p())return f=await this.Events.trigger("failed",u,n),f!=null?(v=~~f,this.Events.trigger("retry",`Retrying ${this.options.id} after ${v} ms`,n),this.retryCount++,d(v)):(this.doDone(n),await m(this.options,n),this._assertStatus("DONE"),this._reject(u))}doDone(u){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",u)}};var L=N,B,y,G;G=a,B=w,y=class{constructor(u,n,p){this.instance=u,this.storeOptions=n,this.clientId=this.instance._randomIndex(),G.load(p,p,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var u;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(u=this.heartbeat=setInterval(()=>{var n,p,d,m,f;if(m=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&m>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=m,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&m>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:d,reservoir:f}=this.storeOptions,this._lastReservoirIncrease=m,p=d!=null?Math.min(n,d-f):n,p>0))return this.storeOptions.reservoir+=p,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?u.unref():void 0:clearInterval(this.heartbeat)}async __publish__(u){return await this.yieldLoop(),this.instance.Events.trigger("message",u.toString())}async __disconnect__(u){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(u=0){return new this.Promise(function(n,p){return setTimeout(n,u)})}computePenalty(){var u;return(u=this.storeOptions.penalty)!=null?u:15*this.storeOptions.minTime||5e3}async __updateSettings__(u){return await this.yieldLoop(),G.overwrite(u,u,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(u){return await this.yieldLoop(),this._nextRequest+this.timeout<u}computeCapacity(){var u,n;return{maxConcurrent:u,reservoir:n}=this.storeOptions,u!=null&&n!=null?Math.min(u-this._running,n):u!=null?u-this._running:n??null}conditionsCheck(u){var n;return n=this.computeCapacity(),n==null||u<=n}async __incrementReservoir__(u){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(u){return this._unblockTime>=u}check(u,n){return this.conditionsCheck(u)&&this._nextRequest-n<=0}async __check__(u){var n;return await this.yieldLoop(),n=Date.now(),this.check(u,n)}async __register__(u,n,p){var d,m;return await this.yieldLoop(),d=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),m=Math.max(this._nextRequest-d,0),this._nextRequest=d+m+this.storeOptions.minTime,{success:!0,wait:m,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(u,n){var p,d,m;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new B(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return d=Date.now(),m=this.storeOptions.highWater!=null&&u===this.storeOptions.highWater&&!this.check(n,d),p=this.strategyIsBlock()&&(m||this.isBlocked(d)),p&&(this._unblockTime=d+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:m,blocked:p,strategy:this.storeOptions.strategy}}async __free__(u,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var A=y,U,W;U=w,W=class{constructor(u){this.status=u,this._jobs={},this.counts=this.status.map(function(){return 0})}next(u){var n,p;if(n=this._jobs[u],p=n+1,n!=null&&p<this.status.length)return this.counts[n]--,this.counts[p]++,this._jobs[u]++;if(n!=null)return this.counts[n]--,delete this._jobs[u]}start(u){var n;return n=0,this._jobs[u]=n,this.counts[n]++}remove(u){var n;return n=this._jobs[u],n!=null&&(this.counts[n]--,delete this._jobs[u]),n!=null}jobStatus(u){var n;return(n=this.status[this._jobs[u]])!=null?n:null}statusJobs(u){var n,p,d,m,f;if(u!=null){if(p=this.status.indexOf(u),p<0)throw new U(`status must be one of ${this.status.join(", ")}`);d=this._jobs,m=[];for(n in d)f=d[n],f===p&&m.push(n);return m}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((u,n,p)=>(u[this.status[p]]=n,u),{})}};var V=W,J,z;J=g,z=class{constructor(u,n){this.schedule=this.schedule.bind(this),this.name=u,this.Promise=n,this._running=0,this._queue=new J}isEmpty(){return this._queue.length===0}async _tryToRun(){var u,n,p,d,m,f,v;if(this._running<1&&this._queue.length>0)return this._running++,{task:v,args:u,resolve:m,reject:d}=this._queue.shift(),n=await async function(){try{return f=await v(...u),function(){return m(f)}}catch(S){return p=S,function(){return d(p)}}}(),this._running--,this._tryToRun(),n()}schedule(u,...n){var p,d,m;return m=d=null,p=new this.Promise(function(f,v){return m=f,d=v}),this._queue.push({task:u,args:n,resolve:m,reject:d}),this._tryToRun(),p}};var or=z,nr="2.19.5",It={version:nr},xt=Object.freeze({version:nr,default:It}),ir=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),ar=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),jt=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),cr,lr,ur,pr,dr,me;me=a,cr=_,pr=ir,ur=ar,dr=jt,lr=(function(){class b{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,me.load(this.limiterOptions,this.defaults,this),this.Events=new cr(this),this.instances={},this.Bottleneck=yr,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new pr(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new ur(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var p;return(p=this.instances[n])!=null?p:(()=>{var d;return d=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",d,n),d})()}async deleteKey(n=""){var p,d;return d=this.instances[n],this.connection&&(p=await this.connection.__runCommand__(["del",...dr.allKeys(`${this.id}-${n}`)])),d!=null&&(delete this.instances[n],await d.disconnect()),d!=null||p>0}limiters(){var n,p,d,m;p=this.instances,d=[];for(n in p)m=p[n],d.push({key:n,limiter:m});return d}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,p,d,m,f,v,S,$,q;if(this.connection==null)return this.Promise.resolve(this.keys());for(v=[],n=null,q=`b_${this.id}-`.length,p=9;n!==0;)for([$,d]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~$,m=0,S=d.length;m<S;m++)f=d[m],v.push(f.slice(q,-p));return v}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var p,d,m,f,v,S;v=Date.now(),m=this.instances,f=[];for(d in m){S=m[d];try{await S._store.__groupCheck__(v)?f.push(this.deleteKey(d)):f.push(void 0)}catch($){p=$,f.push(S.Events.trigger("error",p))}}return f},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(me.overwrite(n,this.defaults,this),me.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var p;if(!this.sharedConnection)return(p=this.connection)!=null?p.disconnect(n):void 0}}return b.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},b}).call(t);var $t=lr,gr,hr,mr;mr=a,hr=_,gr=(function(){class b{constructor(n={}){this.options=n,mr.load(this.options,this.defaults,this),this.Events=new hr(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,p)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var p;return this._arr.push(n),p=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),p}}return b.prototype.defaults={maxTime:null,maxSize:null,Promise},b}).call(t);var qt=gr,Nt=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ht=s(xt),_r,fr,Pe,Ge,Er,Oe,Tr,vr,br,Re,K,wr=[].splice;Oe=10,fr=5,K=a,Tr=R,Ge=L,Er=A,vr=Nt,Pe=_,br=V,Re=or,_r=(function(){class b{constructor(n={},...p){var d,m;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,p),K.load(n,this.instanceDefaults,this),this._queues=new Tr(Oe),this._scheduled={},this._states=new br(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new Pe(this),this._submitLock=new Re("submit",this.Promise),this._registerLock=new Re("register",this.Promise),m=K.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return d=K.load(n,this.redisStoreDefaults,{}),new vr(this,m,d);if(this.datastore==="local")return d=K.load(n,this.localStoreDefaults,{}),new Er(this,m,d);throw new b.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var f;return(f=this._store.heartbeat)!=null&&typeof f.ref=="function"?f.ref():void 0}),this._queues.on("zero",()=>{var f;return(f=this._store.heartbeat)!=null&&typeof f.unref=="function"?f.unref():void 0})}_validateOptions(n,p){if(!(n!=null&&typeof n=="object"&&p.length===0))throw new b.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,p,d,m){var f,v;try{if({running:v}=await this._store.__free__(n,d.weight),this.Events.trigger("debug",`Freed ${d.id}`,m),v===0&&this.empty())return this.Events.trigger("idle")}catch(S){return f=S,this.Events.trigger("error",f)}}_run(n,p,d){var m,f,v;return p.doRun(),m=this._clearGlobalState.bind(this,n),v=this._run.bind(this,n,p),f=this._free.bind(this,n,p),this._scheduled[n]={timeout:setTimeout(()=>p.doExecute(this._limiter,m,v,f),d),expiration:p.options.expiration!=null?setTimeout(function(){return p.doExpire(m,v,f)},d+p.options.expiration):void 0,job:p}}_drainOne(n){return this._registerLock.schedule(()=>{var p,d,m,f,v;return this.queued()===0?this.Promise.resolve(null):(v=this._queues.getFirst(),{options:f,args:p}=m=v.first(),n!=null&&f.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${f.id}`,{args:p,options:f}),d=this._randomIndex(),this._store.__register__(d,f.weight,f.expiration).then(({success:S,wait:$,reservoir:q})=>{var ne;return this.Events.trigger("debug",`Drained ${f.id}`,{success:S,args:p,options:f}),S?(v.shift(),ne=this.empty(),ne&&this.Events.trigger("empty"),q===0&&this.Events.trigger("depleted",ne),this._run(d,m,$),this.Promise.resolve(f.weight)):this.Promise.resolve(null)})))})}_drainAll(n,p=0){return this._drainOne(n).then(d=>{var m;return d!=null?(m=n!=null?n-d:n,this._drainAll(m,p+d)):this.Promise.resolve(p)}).catch(d=>this.Events.trigger("error",d))}_dropAllQueued(n){return this._queues.shiftAll(function(p){return p.doDrop({message:n})})}stop(n={}){var p,d;return n=K.load(n,this.stopDefaults),d=m=>{var f;return f=()=>{var v;return v=this._states.counts,v[0]+v[1]+v[2]+v[3]===m},new this.Promise((v,S)=>f()?v():this.on("done",()=>{if(f())return this.removeAllListeners("done"),v()}))},p=n.dropWaitingJobs?(this._run=function(m,f){return f.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var m,f,v;f=this._scheduled;for(m in f)v=f[m],this.jobStatus(v.job.options.id)==="RUNNING"&&(clearTimeout(v.timeout),clearTimeout(v.expiration),v.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),d(0)}))):this.schedule({priority:Oe-1,weight:0},()=>d(1)),this._receive=function(m){return m._reject(new b.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new b.prototype.BottleneckError("stop() has already been called")),p}async _addToQueue(n){var p,d,m,f,v,S,$;({args:p,options:f}=n);try{({reachedHWM:v,blocked:d,strategy:$}=await this._store.__submit__(this.queued(),f.weight))}catch(q){return m=q,this.Events.trigger("debug",`Could not queue ${f.id}`,{args:p,options:f,error:m}),n.doDrop({error:m}),!1}return d?(n.doDrop(),!0):v&&(S=$===b.prototype.strategy.LEAK?this._queues.shiftLastFrom(f.priority):$===b.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(f.priority+1):$===b.prototype.strategy.OVERFLOW?n:void 0,S!=null&&S.doDrop(),S==null||$===b.prototype.strategy.OVERFLOW)?(S==null&&n.doDrop(),v):(n.doQueue(v,d),this._queues.push(n),await this._drainAll(),v)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new b.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var p,d,m,f,v,S,$;return typeof n[0]=="function"?(v=n,[d,...n]=v,[p]=wr.call(n,-1),f=K.load({},this.jobDefaults)):(S=n,[f,d,...n]=S,[p]=wr.call(n,-1),f=K.load(f,this.jobDefaults)),$=(...q)=>new this.Promise(function(ne,Wt){return d(...q,function(...kr){return(kr[0]!=null?Wt:ne)(kr)})}),m=new Ge($,n,f,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),m.promise.then(function(q){return typeof p=="function"?p(...q):void 0}).catch(function(q){return Array.isArray(q)?typeof p=="function"?p(...q):void 0:typeof p=="function"?p(q):void 0}),this._receive(m)}schedule(...n){var p,d,m;return typeof n[0]=="function"?([m,...n]=n,d={}):[d,m,...n]=n,p=new Ge(m,n,d,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(p),p.promise}wrap(n){var p,d;return p=this.schedule.bind(this),d=function(...m){return p(n.bind(this),...m)},d.withOptions=function(m,...f){return p(m,n,...f)},d}async updateSettings(n={}){return await this._store.__updateSettings__(K.overwrite(n,this.storeDefaults)),K.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return b.default=b,b.Events=Pe,b.version=b.prototype.version=Ht.version,b.strategy=b.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},b.BottleneckError=b.prototype.BottleneckError=w,b.Group=b.prototype.Group=$t,b.RedisConnection=b.prototype.RedisConnection=ir,b.IORedisConnection=b.prototype.IORedisConnection=ar,b.Batcher=b.prototype.Batcher=qt,b.prototype.jobDefaults={priority:fr,weight:1,expiration:null,id:"<no-id>"},b.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:b.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},b.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},b.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},b.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},b.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},b}).call(t);var yr=_r,Mt=yr;return Mt})})(Ft);var Ro=Ft.exports;const Ct=Oo(Ro);async function Ut(e,r,t,s){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const o=s.request.retries!=null?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,o,i)}throw t}async function Ao(e,r,t,s){const o=new Ct;return o.on("failed",function(i,a){const l=~~i.request.request.retries,g=~~i.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,l>a.retryCount)return g*e.retryAfterBaseValue}),o.schedule(So.bind(null,e,r,t),s)}async function So(e,r,t,s){const o=await t(t,s);if(o.data&&o.data.errors&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const i=new ae(o.data.errors[0].message,500,{request:s,response:o});return Ut(e,r,i,s)}return o}var Fo="0.0.0-development";function Dt(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",Ut.bind(null,t,e)),e.hook.wrap("request",Ao.bind(null,t,e))),{retry:{retryRequest:(s,o,i)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:i}),s)}}}Dt.VERSION=Fo;var Co="0.0.0-development",Le=()=>Promise.resolve();function Uo(e,r,t){return e.retryLimiter.schedule(Do,e,r,t)}async function Do(e,r,t){const s=t.method!=="GET"&&t.method!=="HEAD",{pathname:o}=new URL(t.url,"http://github.test"),i=t.method==="GET"&&o.startsWith("/search/"),a=o.startsWith("/graphql"),g=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(g.expiration=1e3*60),(s||a)&&await e.write.key(e.id).schedule(g,Le),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(g,Le),i&&await e.search.key(e.id).schedule(g,Le);const h=e.global.key(e.id).schedule(g,r,t);if(a){const _=await h;if(_.data.errors!=null&&_.data.errors.some(c=>c.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:_,data:_.data})}return h}var Lo=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Io(e){const t=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var Kr=Io(Lo),Lt=Kr.test.bind(Kr),se={},xo=function(e,r){se.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),se.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),se.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),se.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function sr(e,r){const{enabled:t=!0,Bottleneck:s=Ct,id:o="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const l={connection:a,timeout:i};se.global==null&&xo(s,l);const g=Object.assign({clustering:a!=null,triggersNotification:Lt,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...se},r.throttle);if(typeof g.onSecondaryRateLimit!="function"||typeof g.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const h={},_=new s.Events(h);return h.on("secondary-limit",g.onSecondaryRateLimit),h.on("rate-limit",g.onRateLimit),h.on("error",c=>e.log.warn("Error in throttling-plugin limit handler",c)),g.retryLimiter.on("failed",async function(c,k){const[E,R,F]=k.args,{pathname:w}=new URL(F.url,"http://github.test");if(!(w.startsWith("/graphql")&&c.status!==401||c.status===403))return;const O=~~R.retryCount;R.retryCount=O,F.request.retryCount=O;const{wantRetry:N,retryAfter:j=0}=await async function(){var H;if(/\bsecondary rate\b/i.test(c.message)){const L=Number(c.response.headers["retry-after"])||E.fallbackSecondaryRateRetryAfter;return{wantRetry:await _.trigger("secondary-limit",L,F,e,O),retryAfter:L}}if(c.response.headers!=null&&c.response.headers["x-ratelimit-remaining"]==="0"||(((H=c.response.data)==null?void 0:H.errors)??[]).some(L=>L.type==="RATE_LIMITED")){const L=new Date(~~c.response.headers["x-ratelimit-reset"]*1e3).getTime(),B=Math.max(Math.ceil((L-Date.now())/1e3)+1,0);return{wantRetry:await _.trigger("rate-limit",B,F,e,O),retryAfter:B}}return{}}();if(N)return R.retryCount++,j*E.retryAfterBaseValue}),e.hook.wrap("request",Uo.bind(null,g)),{}}sr.VERSION=Co;sr.triggersNotification=Lt;var jo="0.0.0-development",$o=ao.plugin(St,Pt,vo,Dt,sr).defaults({userAgent:`octokit.js/${jo}`,throttle:{onRateLimit:qo,onSecondaryRateLimit:No}});function qo(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function No(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}const Ho="/assets/1-Cu8PJRqX.png",Mo="/assets/2-C6ZOx5AD.png",Wo="/assets/3-nbcnm9YD.png",Bo="/assets/4-BOmMiAdd.png";function Vo(){let e=[Ho,Mo,Wo,Bo];const[r,t]=Se(0),s=ss(null),[o,i]=Se({Windows:"",Mac:"",other:"https://github.com/n0vella/cardo/releases/latest/"}),[a,l]=Se("other"),g=async()=>{const _=await new $o({auth:void 0}).request("GET /repos/n0vella/cardo/releases/latest",{owner:"OWNER",repo:"REPO",headers:{"X-GitHub-Api-Version":"2022-11-28"}}),c={...o};for(const k of _.data.assets)k.name.endsWith(".msi")?c.Windows=k.browser_download_url:k.name.endsWith(".dmg")&&(c.Mac=k.browser_download_url);i(c)};return ut(()=>{document.title="Cardo",navigator.userAgent.includes("Win")?l("Windows"):navigator.userAgent.includes("Mac")&&l("Mac"),g()},[]),T("div",{className:"w-full text-zinc-100 flex flex-col items-center pt-6 gap-8",children:[T("div",{className:"flex flex-col items-center gap-1",children:[T("img",{className:"w-16 cursor-pointer hover:p-1",title:"Open Github Repo",src:"https://raw.githubusercontent.com/n0vella/cardo/master/src-tauri/icons/icon.png",onClick:()=>open("https://github.com/n0vella/cardo/")}),T("h1",{className:"text-2xl md:text-4xl lg:text-5xl text-nowrap",children:"Cardo podcast player"})]}),T("div",{className:"group relative w-5/6 lg:w-2/5",children:[T("div",{className:"opacity-0 group-hover:opacity-100 transition-opacity absolute w-full top-1/2 -translate-y-1/2 flex justify-between h-1/2",children:[T("button",{className:"bg-purple-500 w-1/12 rounded-r-full opacity-60 hover:opacity-90 transition-opacity",onClick:()=>{s.current&&(s.current.scrollLeft-=s.current.scrollWidth/e.length,t(Math.max(0,r-1)))},children:fs}),T("button",{className:"bg-purple-500 w-1/12 rounded-l-full opacity-60 hover:opacity-90 transition-opacity duration-200",onClick:()=>{s.current&&(s.current.scrollLeft+=s.current.scrollWidth/e.length,t(Math.min(e.length-1,r+1)))},children:Es})]}),T("div",{className:"flex overflow-x-auto snap-x snap-mandatory scroll-smooth shadow-lg shadow-zinc-950",ref:s,children:e.map(h=>T("img",{className:"shrink-0 snap-always snap-center",src:h}))}),T("div",{className:"absolute flex opacity-0 group-hover:opacity-100 bottom-0 mb-3 left-1/2 -translate-x-1/2 gap-3",children:e.map((h,_)=>T("div",{className:`border-1 border-purple-900 w-[10px] h-[10px] rounded-full
                ${r==_?"bg-purple-700":"bg-zinc-100"}`}))})]}),T("div",{className:"flex items-center rounded-md overflow-hidden",children:[T("button",{className:"flex items-center gap-1 bg-purple-700 pr-2 hover:bg-purple-600 h-12",title:a=="other"?"Go to releases page":"Download latest release for "+a,onClick:()=>{open(o[a])},children:[T("span",{className:"w-10 p-1",children:a=="Windows"?Ts:a=="Mac"?vs:$r}),T("p",{className:"text-lg",children:"DOWNLOAD"})]}),a!="other"&&T("button",{className:"flex items-center bg-purple-900 hover:bg-purple-800 h-12",title:"Go to releases page",onClick:()=>open(o.other),children:T("span",{className:"w-10 p-1",children:$r})})]})]})}function we(){return we=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var s in t)({}).hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},we.apply(null,arguments)}var oe;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(oe||(oe={}));var Qr=function(e){return e},Jr="beforeunload",zo="hashchange",Ko="popstate";function Qo(e){e===void 0&&(e={});var r=e,t=r.window,s=t===void 0?document.defaultView:t,o=s.history;function i(){var y=Zr(s.location.hash.substr(1)),G=y.pathname,A=G===void 0?"/":G,U=y.search,W=U===void 0?"":U,V=y.hash,J=V===void 0?"":V,z=o.state||{};return[z.idx,Qr({pathname:A,search:W,hash:J,state:z.usr||null,key:z.key||"default"})]}var a=null;function l(){if(a)E.call(a),a=null;else{var y=oe.Pop,G=i(),A=G[0],U=G[1];if(E.length){if(A!=null){var W=_-A;W&&(a={action:y,location:U,retry:function(){L(W*-1)}},L(W))}}else N(y)}}s.addEventListener(Ko,l),s.addEventListener(zo,function(){var y=i(),G=y[1];Ie(G)!==Ie(c)&&l()});var g=oe.Pop,h=i(),_=h[0],c=h[1],k=Xr(),E=Xr();_==null&&(_=0,o.replaceState(we({},o.state,{idx:_}),""));function R(){var y=document.querySelector("base"),G="";if(y&&y.getAttribute("href")){var A=s.location.href,U=A.indexOf("#");G=U===-1?A:A.slice(0,U)}return G}function F(y){return R()+"#"+(typeof y=="string"?y:Ie(y))}function w(y,G){return G===void 0&&(G=null),Qr(we({pathname:c.pathname,hash:"",search:""},typeof y=="string"?Zr(y):y,{state:G,key:Jo()}))}function P(y,G){return[{usr:y.state,key:y.key,idx:G},F(y)]}function O(y,G,A){return!E.length||(E.call({action:y,location:G,retry:A}),!1)}function N(y){g=y;var G=i();_=G[0],c=G[1],k.call({action:g,location:c})}function j(y,G){var A=oe.Push,U=w(y,G);function W(){j(y,G)}if(O(A,U,W)){var V=P(U,_+1),J=V[0],z=V[1];try{o.pushState(J,"",z)}catch{s.location.assign(z)}N(A)}}function H(y,G){var A=oe.Replace,U=w(y,G);function W(){H(y,G)}if(O(A,U,W)){var V=P(U,_),J=V[0],z=V[1];o.replaceState(J,"",z),N(A)}}function L(y){o.go(y)}var B={get action(){return g},get location(){return c},createHref:F,push:j,replace:H,go:L,back:function(){L(-1)},forward:function(){L(1)},listen:function(G){return k.push(G)},block:function(G){var A=E.push(G);return E.length===1&&s.addEventListener(Jr,Yr),function(){A(),E.length||s.removeEventListener(Jr,Yr)}}};return B}function Yr(e){e.preventDefault(),e.returnValue=""}function Xr(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter(function(s){return s!==t})}},call:function(t){e.forEach(function(s){return s&&s(t)})}}}function Jo(){return Math.random().toString(36).substr(2,8)}function Ie(e){var r=e.pathname,t=r===void 0?"/":r,s=e.search,o=s===void 0?"":s,i=e.hash,a=i===void 0?"":i;return o&&o!=="?"&&(t+=o.charAt(0)==="?"?o:"?"+o),a&&a!=="#"&&(t+=a.charAt(0)==="#"?a:"#"+a),t}function Zr(e){var r={};if(e){var t=e.indexOf("#");t>=0&&(r.hash=e.substr(t),e=e.substr(0,t));var s=e.indexOf("?");s>=0&&(r.search=e.substr(s),e=e.substr(0,s)),e&&(r.pathname=e)}return r}function Yo(e){return ut(()=>{ht(e)},[]),T(he,{})}function Xo(){return T("div",{className:"w-full h-screen bg-zinc-900 pt-10 font-sans overflow-y-auto scroll-smooth",children:[T("div",{className:"absolute top-0 w-full h-12 bg-zinc-950 flex justify-between px-3 py-1",children:[T("div",{className:"group",children:[T("div",{className:"bg-yellow-400 items-center rounded-md py-1 px-2 flex group-hover:hidden",children:[T("span",{className:"w-8",children:bs}),T("p",{className:"font-medium",children:"¿DO YOU LIKE THIS?"})]}),T("div",{className:"gap-1 hidden group-hover:flex",children:[T("a",{href:"https://www.buymeacoffee.com/n0vella",target:"_blank",children:T("img",{src:"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png",alt:"Buy Me A Coffee",className:"h-10"})}),T("a",{href:"https://www.paypal.com/paypalme/adriannovella",target:"_blank",children:T("img",{src:"https://www.paypalobjects.com/webstatic/icon/pp196.png",alt:"Paypal",className:"h-10 rounded-md"})})]})]}),T("a",{href:"https://github.com/n0vella",target:"_blank",className:" contents",children:T("img",{className:"rounded-full hover:mix-blend-plus-lighter",src:"https://avatars.githubusercontent.com/u/177157984",alt:"Profile picture"})})]}),T(_t,{history:Qo(),children:[T(jr,{path:"/",component:()=>Yo("/cardo")}),T(jr,{path:"/cardo",component:Vo})]}),T("div",{className:"w-full h-12 bg-zinc-950 flex justify-end px-3 py-1 mt-10"})]})}Xt(T(Xo,{}),document.getElementById("app"));
