var wt=Object.defineProperty;var vt=(e,r,t)=>r in e?wt(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var C=(e,r,t)=>vt(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();var de,R,Ur,V,pr,Dr,Ge,Ue,Oe,Re,te={},Lr=[],yt=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,De=Array.isArray;function M(e,r){for(var t in r)e[t]=r[t];return e}function Ir(e){e&&e.parentNode&&e.parentNode.removeChild(e)}function kt(e,r,t){var s,o,i,a={};for(i in r)i=="key"?s=r[i]:i=="ref"?o=r[i]:a[i]=r[i];if(arguments.length>2&&(a.children=arguments.length>3?de.call(arguments,2):t),typeof e=="function"&&e.defaultProps!=null)for(i in e.defaultProps)a[i]===void 0&&(a[i]=e.defaultProps[i]);return ae(e,a,s,o,null)}function ae(e,r,t,s,o){var i={type:e,props:r,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:o??++Ur,__i:-1,__u:0};return o==null&&R.vnode!=null&&R.vnode(i),i}function ge(e){return e.children}function ce(e,r){this.props=e,this.context=r}function X(e,r){if(r==null)return e.__?X(e.__,e.__i+1):null;for(var t;r<e.__k.length;r++)if((t=e.__k[r])!=null&&t.__e!=null)return t.__e;return typeof e.type=="function"?X(e):null}function jr(e){var r,t;if((e=e.__)!=null&&e.__c!=null){for(e.__e=e.__c.base=null,r=0;r<e.__k.length;r++)if((t=e.__k[r])!=null&&t.__e!=null){e.__e=e.__c.base=t.__e;break}return jr(e)}}function dr(e){(!e.__d&&(e.__d=!0)&&V.push(e)&&!ue.__r++||pr!==R.debounceRendering)&&((pr=R.debounceRendering)||Dr)(ue)}function ue(){var e,r,t,s,o,i,a,p;for(V.sort(Ge);e=V.shift();)e.__d&&(r=V.length,s=void 0,i=(o=(t=e).__v).__e,a=[],p=[],t.__P&&((s=M({},o)).__v=o.__v+1,R.vnode&&R.vnode(s),Le(t.__P,s,o,t.__n,t.__P.namespaceURI,32&o.__u?[i]:null,a,i??X(o),!!(32&o.__u),p),s.__v=o.__v,s.__.__k[s.__i]=s,$r(a,s,p),s.__e!=i&&jr(s)),V.length>r&&V.sort(Ge));ue.__r=0}function xr(e,r,t,s,o,i,a,p,g,m,f){var l,k,w,O,A,v=s&&s.__k||Lr,y=r.length;for(t.__d=g,Pt(t,r,v),g=t.__d,l=0;l<y;l++)(w=t.__k[l])!=null&&(k=w.__i===-1?te:v[w.__i]||te,w.__i=l,Le(e,w,k,o,i,a,p,g,m,f),O=w.__e,w.ref&&k.ref!=w.ref&&(k.ref&&Ie(k.ref,null,w),f.push(w.ref,w.__c||O,w)),A==null&&O!=null&&(A=O),65536&w.__u||k.__k===w.__k?g=qr(w,g,e):typeof w.type=="function"&&w.__d!==void 0?g=w.__d:O&&(g=O.nextSibling),w.__d=void 0,w.__u&=-196609);t.__d=g,t.__e=A}function Pt(e,r,t){var s,o,i,a,p,g=r.length,m=t.length,f=m,l=0;for(e.__k=[],s=0;s<g;s++)(o=r[s])!=null&&typeof o!="boolean"&&typeof o!="function"?(a=s+l,(o=e.__k[s]=typeof o=="string"||typeof o=="number"||typeof o=="bigint"||o.constructor==String?ae(null,o,null,null,null):De(o)?ae(ge,{children:o},null,null,null):o.constructor===void 0&&o.__b>0?ae(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o).__=e,o.__b=e.__b+1,i=null,(p=o.__i=Gt(o,t,a,f))!==-1&&(f--,(i=t[p])&&(i.__u|=131072)),i==null||i.__v===null?(p==-1&&l--,typeof o.type!="function"&&(o.__u|=65536)):p!==a&&(p==a-1?l--:p==a+1?l++:(p>a?l--:l++,o.__u|=65536))):o=e.__k[s]=null;if(f)for(s=0;s<m;s++)(i=t[s])!=null&&!(131072&i.__u)&&(i.__e==e.__d&&(e.__d=X(i)),Nr(i,i))}function qr(e,r,t){var s,o;if(typeof e.type=="function"){for(s=e.__k,o=0;s&&o<s.length;o++)s[o]&&(s[o].__=e,r=qr(s[o],r,t));return r}e.__e!=r&&(r&&e.type&&!t.contains(r)&&(r=X(e)),t.insertBefore(e.__e,r||null),r=e.__e);do r=r&&r.nextSibling;while(r!=null&&r.nodeType===8);return r}function Gt(e,r,t,s){var o=e.key,i=e.type,a=t-1,p=t+1,g=r[t];if(g===null||g&&o==g.key&&i===g.type&&!(131072&g.__u))return t;if(s>(g!=null&&!(131072&g.__u)?1:0))for(;a>=0||p<r.length;){if(a>=0){if((g=r[a])&&!(131072&g.__u)&&o==g.key&&i===g.type)return a;a--}if(p<r.length){if((g=r[p])&&!(131072&g.__u)&&o==g.key&&i===g.type)return p;p++}}return-1}function gr(e,r,t){r[0]==="-"?e.setProperty(r,t??""):e[r]=t==null?"":typeof t!="number"||yt.test(r)?t:t+"px"}function ne(e,r,t,s,o){var i;e:if(r==="style")if(typeof t=="string")e.style.cssText=t;else{if(typeof s=="string"&&(e.style.cssText=s=""),s)for(r in s)t&&r in t||gr(e.style,r,"");if(t)for(r in t)s&&t[r]===s[r]||gr(e.style,r,t[r])}else if(r[0]==="o"&&r[1]==="n")i=r!==(r=r.replace(/(PointerCapture)$|Capture$/i,"$1")),r=r.toLowerCase()in e||r==="onFocusOut"||r==="onFocusIn"?r.toLowerCase().slice(2):r.slice(2),e.l||(e.l={}),e.l[r+i]=t,t?s?t.u=s.u:(t.u=Ue,e.addEventListener(r,i?Re:Oe,i)):e.removeEventListener(r,i?Re:Oe,i);else{if(o=="http://www.w3.org/2000/svg")r=r.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(r!="width"&&r!="height"&&r!="href"&&r!="list"&&r!="form"&&r!="tabIndex"&&r!="download"&&r!="rowSpan"&&r!="colSpan"&&r!="role"&&r!="popover"&&r in e)try{e[r]=t??"";break e}catch{}typeof t=="function"||(t==null||t===!1&&r[4]!=="-"?e.removeAttribute(r):e.setAttribute(r,r=="popover"&&t==1?"":t))}}function hr(e){return function(r){if(this.l){var t=this.l[r.type+e];if(r.t==null)r.t=Ue++;else if(r.t<t.u)return;return t(R.event?R.event(r):r)}}}function Le(e,r,t,s,o,i,a,p,g,m){var f,l,k,w,O,A,v,y,P,x,L,q,I,N,H,W,j=r.type;if(r.constructor!==void 0)return null;128&t.__u&&(g=!!(32&t.__u),i=[p=r.__e=t.__e]),(f=R.__b)&&f(r);e:if(typeof j=="function")try{if(y=r.props,P="prototype"in j&&j.prototype.render,x=(f=j.contextType)&&s[f.__c],L=f?x?x.props.value:f.__:s,t.__c?v=(l=r.__c=t.__c).__=l.__E:(P?r.__c=l=new j(y,L):(r.__c=l=new ce(y,L),l.constructor=j,l.render=Rt),x&&x.sub(l),l.props=y,l.state||(l.state={}),l.context=L,l.__n=s,k=l.__d=!0,l.__h=[],l._sb=[]),P&&l.__s==null&&(l.__s=l.state),P&&j.getDerivedStateFromProps!=null&&(l.__s==l.state&&(l.__s=M({},l.__s)),M(l.__s,j.getDerivedStateFromProps(y,l.__s))),w=l.props,O=l.state,l.__v=r,k)P&&j.getDerivedStateFromProps==null&&l.componentWillMount!=null&&l.componentWillMount(),P&&l.componentDidMount!=null&&l.__h.push(l.componentDidMount);else{if(P&&j.getDerivedStateFromProps==null&&y!==w&&l.componentWillReceiveProps!=null&&l.componentWillReceiveProps(y,L),!l.__e&&(l.shouldComponentUpdate!=null&&l.shouldComponentUpdate(y,l.__s,L)===!1||r.__v===t.__v)){for(r.__v!==t.__v&&(l.props=y,l.state=l.__s,l.__d=!1),r.__e=t.__e,r.__k=t.__k,r.__k.some(function(B){B&&(B.__=r)}),q=0;q<l._sb.length;q++)l.__h.push(l._sb[q]);l._sb=[],l.__h.length&&a.push(l);break e}l.componentWillUpdate!=null&&l.componentWillUpdate(y,l.__s,L),P&&l.componentDidUpdate!=null&&l.__h.push(function(){l.componentDidUpdate(w,O,A)})}if(l.context=L,l.props=y,l.__P=e,l.__e=!1,I=R.__r,N=0,P){for(l.state=l.__s,l.__d=!1,I&&I(r),f=l.render(l.props,l.state,l.context),H=0;H<l._sb.length;H++)l.__h.push(l._sb[H]);l._sb=[]}else do l.__d=!1,I&&I(r),f=l.render(l.props,l.state,l.context),l.state=l.__s;while(l.__d&&++N<25);l.state=l.__s,l.getChildContext!=null&&(s=M(M({},s),l.getChildContext())),P&&!k&&l.getSnapshotBeforeUpdate!=null&&(A=l.getSnapshotBeforeUpdate(w,O)),xr(e,De(W=f!=null&&f.type===ge&&f.key==null?f.props.children:f)?W:[W],r,t,s,o,i,a,p,g,m),l.base=r.__e,r.__u&=-161,l.__h.length&&a.push(l),v&&(l.__E=l.__=null)}catch(B){if(r.__v=null,g||i!=null){for(r.__u|=g?160:32;p&&p.nodeType===8&&p.nextSibling;)p=p.nextSibling;i[i.indexOf(p)]=null,r.__e=p}else r.__e=t.__e,r.__k=t.__k;R.__e(B,r,t)}else i==null&&r.__v===t.__v?(r.__k=t.__k,r.__e=t.__e):r.__e=Ot(t.__e,r,t,s,o,i,a,g,m);(f=R.diffed)&&f(r)}function $r(e,r,t){r.__d=void 0;for(var s=0;s<t.length;s++)Ie(t[s],t[++s],t[++s]);R.__c&&R.__c(r,e),e.some(function(o){try{e=o.__h,o.__h=[],e.some(function(i){i.call(o)})}catch(i){R.__e(i,o.__v)}})}function Ot(e,r,t,s,o,i,a,p,g){var m,f,l,k,w,O,A,v=t.props,y=r.props,P=r.type;if(P==="svg"?o="http://www.w3.org/2000/svg":P==="math"?o="http://www.w3.org/1998/Math/MathML":o||(o="http://www.w3.org/1999/xhtml"),i!=null){for(m=0;m<i.length;m++)if((w=i[m])&&"setAttribute"in w==!!P&&(P?w.localName===P:w.nodeType===3)){e=w,i[m]=null;break}}if(e==null){if(P===null)return document.createTextNode(y);e=document.createElementNS(o,P,y.is&&y),p&&(R.__m&&R.__m(r,i),p=!1),i=null}if(P===null)v===y||p&&e.data===y||(e.data=y);else{if(i=i&&de.call(e.childNodes),v=t.props||te,!p&&i!=null)for(v={},m=0;m<e.attributes.length;m++)v[(w=e.attributes[m]).name]=w.value;for(m in v)if(w=v[m],m!="children"){if(m=="dangerouslySetInnerHTML")l=w;else if(!(m in y)){if(m=="value"&&"defaultValue"in y||m=="checked"&&"defaultChecked"in y)continue;ne(e,m,null,w,o)}}for(m in y)w=y[m],m=="children"?k=w:m=="dangerouslySetInnerHTML"?f=w:m=="value"?O=w:m=="checked"?A=w:p&&typeof w!="function"||v[m]===w||ne(e,m,w,v[m],o);if(f)p||l&&(f.__html===l.__html||f.__html===e.innerHTML)||(e.innerHTML=f.__html),r.__k=[];else if(l&&(e.innerHTML=""),xr(e,De(k)?k:[k],r,t,s,P==="foreignObject"?"http://www.w3.org/1999/xhtml":o,i,a,i?i[0]:t.__k&&X(t,0),p,g),i!=null)for(m=i.length;m--;)Ir(i[m]);p||(m="value",P==="progress"&&O==null?e.removeAttribute("value"):O!==void 0&&(O!==e[m]||P==="progress"&&!O||P==="option"&&O!==v[m])&&ne(e,m,O,v[m],o),m="checked",A!==void 0&&A!==e[m]&&ne(e,m,A,v[m],o))}return e}function Ie(e,r,t){try{if(typeof e=="function"){var s=typeof e.__u=="function";s&&e.__u(),s&&r==null||(e.__u=e(r))}else e.current=r}catch(o){R.__e(o,t)}}function Nr(e,r,t){var s,o;if(R.unmount&&R.unmount(e),(s=e.ref)&&(s.current&&s.current!==e.__e||Ie(s,null,r)),(s=e.__c)!=null){if(s.componentWillUnmount)try{s.componentWillUnmount()}catch(i){R.__e(i,r)}s.base=s.__P=null}if(s=e.__k)for(o=0;o<s.length;o++)s[o]&&Nr(s[o],r,t||typeof e.type!="function");t||Ir(e.__e),e.__c=e.__=e.__e=e.__d=void 0}function Rt(e,r,t){return this.constructor(e,t)}function At(e,r,t){var s,o,i,a;R.__&&R.__(e,r),o=(s=typeof t=="function")?null:r.__k,i=[],a=[],Le(r,e=(!s&&t||r).__k=kt(ge,null,[e]),o||te,te,r.namespaceURI,!s&&t?[t]:o?null:r.firstChild?de.call(r.childNodes):null,i,!s&&t?t:o?o.__e:r.firstChild,s,a),$r(i,e,a)}de=Lr.slice,R={__e:function(e,r,t,s){for(var o,i,a;r=r.__;)if((o=r.__c)&&!o.__)try{if((i=o.constructor)&&i.getDerivedStateFromError!=null&&(o.setState(i.getDerivedStateFromError(e)),a=o.__d),o.componentDidCatch!=null&&(o.componentDidCatch(e,s||{}),a=o.__d),a)return o.__E=o}catch(p){e=p}throw e}},Ur=0,ce.prototype.setState=function(e,r){var t;t=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=M({},this.state),typeof e=="function"&&(e=e(M({},t),this.props)),e&&M(t,e),e!=null&&this.__v&&(r&&this._sb.push(r),dr(this))},ce.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),dr(this))},ce.prototype.render=ge,V=[],Dr=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,Ge=function(e,r){return e.__v.__b-r.__v.__b},ue.__r=0,Ue=0,Oe=hr(!1),Re=hr(!0);var St=0;function E(e,r,t,s,o,i){r||(r={});var a,p,g=r;if("ref"in g)for(p in g={},r)p=="ref"?a=r[p]:g[p]=r[p];var m={type:e,props:g,key:t,ref:a,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--St,__i:-1,__u:0,__source:o,__self:i};if(typeof e=="function"&&(a=e.defaultProps))for(p in a)g[p]===void 0&&(g[p]=a[p]);return R.vnode&&R.vnode(m),m}var se,S,Te,mr,pe=0,Hr=[],F=R,_r=F.__b,fr=F.__r,Er=F.diffed,Tr=F.__c,br=F.unmount,wr=F.__;function je(e,r){F.__h&&F.__h(S,e,pe||r),pe=0;var t=S.__H||(S.__H={__:[],__h:[]});return e>=t.__.length&&t.__.push({}),t.__[e]}function be(e){return pe=1,Ft(Wr,e)}function Ft(e,r,t){var s=je(se++,2);if(s.t=e,!s.__c&&(s.__=[Wr(void 0,r),function(p){var g=s.__N?s.__N[0]:s.__[0],m=s.t(g,p);g!==m&&(s.__N=[m,s.__[1]],s.__c.setState({}))}],s.__c=S,!S.u)){var o=function(p,g,m){if(!s.__c.__H)return!0;var f=s.__c.__H.__.filter(function(k){return!!k.__c});if(f.every(function(k){return!k.__N}))return!i||i.call(this,p,g,m);var l=!1;return f.forEach(function(k){if(k.__N){var w=k.__[0];k.__=k.__N,k.__N=void 0,w!==k.__[0]&&(l=!0)}}),!(!l&&s.__c.props===p)&&(!i||i.call(this,p,g,m))};S.u=!0;var i=S.shouldComponentUpdate,a=S.componentWillUpdate;S.componentWillUpdate=function(p,g,m){if(this.__e){var f=i;i=void 0,o(p,g,m),i=f}a&&a.call(this,p,g,m)},S.shouldComponentUpdate=o}return s.__N||s.__}function Ct(e,r){var t=je(se++,3);!F.__s&&Mr(t.__H,r)&&(t.__=e,t.i=r,S.__H.__h.push(t))}function Ut(e){return pe=5,Dt(function(){return{current:e}},[])}function Dt(e,r){var t=je(se++,7);return Mr(t.__H,r)&&(t.__=e(),t.__H=r,t.__h=e),t.__}function Lt(){for(var e;e=Hr.shift();)if(e.__P&&e.__H)try{e.__H.__h.forEach(le),e.__H.__h.forEach(Ae),e.__H.__h=[]}catch(r){e.__H.__h=[],F.__e(r,e.__v)}}F.__b=function(e){S=null,_r&&_r(e)},F.__=function(e,r){e&&r.__k&&r.__k.__m&&(e.__m=r.__k.__m),wr&&wr(e,r)},F.__r=function(e){fr&&fr(e),se=0;var r=(S=e.__c).__H;r&&(Te===S?(r.__h=[],S.__h=[],r.__.forEach(function(t){t.__N&&(t.__=t.__N),t.i=t.__N=void 0})):(r.__h.forEach(le),r.__h.forEach(Ae),r.__h=[],se=0)),Te=S},F.diffed=function(e){Er&&Er(e);var r=e.__c;r&&r.__H&&(r.__H.__h.length&&(Hr.push(r)!==1&&mr===F.requestAnimationFrame||((mr=F.requestAnimationFrame)||It)(Lt)),r.__H.__.forEach(function(t){t.i&&(t.__H=t.i),t.i=void 0})),Te=S=null},F.__c=function(e,r){r.some(function(t){try{t.__h.forEach(le),t.__h=t.__h.filter(function(s){return!s.__||Ae(s)})}catch(s){r.some(function(o){o.__h&&(o.__h=[])}),r=[],F.__e(s,t.__v)}}),Tr&&Tr(e,r)},F.unmount=function(e){br&&br(e);var r,t=e.__c;t&&t.__H&&(t.__H.__.forEach(function(s){try{le(s)}catch(o){r=o}}),t.__H=void 0,r&&F.__e(r,t.__v))};var vr=typeof requestAnimationFrame=="function";function It(e){var r,t=function(){clearTimeout(s),vr&&cancelAnimationFrame(r),setTimeout(e)},s=setTimeout(t,100);vr&&(r=requestAnimationFrame(t))}function le(e){var r=S,t=e.__c;typeof t=="function"&&(e.__c=void 0,t()),S=r}function Ae(e){var r=S;e.__c=e.__(),S=r}function Mr(e,r){return!e||e.length!==r.length||r.some(function(t,s){return t!==e[s]})}function Wr(e,r){return typeof r=="function"?r(e):r}const jt=E("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-arrow-left",children:[E("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),E("path",{d:"M5 12l14 0"}),E("path",{d:"M5 12l6 6"}),E("path",{d:"M5 12l6 -6"})]}),xt=E("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-arrow-right",children:[E("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),E("path",{d:"M5 12l14 0"}),E("path",{d:"M13 18l6 -6"}),E("path",{d:"M13 6l6 6"})]}),qt=E("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-brand-windows",children:[E("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),E("path",{d:"M17.8 20l-12 -1.5c-1 -.1 -1.8 -.9 -1.8 -1.9v-9.2c0 -1 .8 -1.8 1.8 -1.9l12 -1.5c1.2 -.1 2.2 .8 2.2 1.9v12.1c0 1.2 -1.1 2.1 -2.2 1.9z"}),E("path",{d:"M12 5l0 14"}),E("path",{d:"M4 12l16 0"})]}),$t=E("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-apple",children:[E("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),E("path",{d:"M4 11.319c0 3.102 .444 5.319 2.222 7.978c1.351 1.797 3.156 2.247 5.08 .988c.426 -.268 .97 -.268 1.397 0c1.923 1.26 3.728 .809 5.079 -.988c1.778 -2.66 2.222 -4.876 2.222 -7.977c0 -2.661 -1.99 -5.32 -4.444 -5.32c-1.267 0 -2.41 .693 -3.22 1.44a.5 .5 0 0 1 -.672 0c-.809 -.746 -1.953 -1.44 -3.22 -1.44c-2.454 0 -4.444 2.66 -4.444 5.319"}),E("path",{d:"M7 12c0 -1.47 .454 -2.34 1.5 -3"}),E("path",{d:"M12 7c0 -1.2 .867 -4 3 -4"})]}),yr=E("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-brand-github",children:[E("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),E("path",{d:"M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"})]}),Nt=E("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-tip-jar",children:[E("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),E("path",{d:"M14 10h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5"}),E("path",{d:"M12 9v1"}),E("path",{d:"M12 16v1"}),E("path",{d:"M17 4v1.882c0 .685 .387 1.312 1 1.618s1 .933 1 1.618v8.882a3 3 0 0 1 -3 3h-8a3 3 0 0 1 -3 -3v-8.882c0 -.685 .387 -1.312 1 -1.618s1 -.933 1 -1.618v-1.882"}),E("path",{d:"M6 4h12z"})]});function he(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function xe(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce((o,i)=>xe.bind(null,e,i,o,s),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((o,i)=>i.hook.bind(null,o,s),t)():t(s))}function Ht(e,r,t,s){const o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=(i,a)=>Promise.resolve().then(o.bind(null,a)).then(i.bind(null,a))),r==="after"&&(s=(i,a)=>{let p;return Promise.resolve().then(i.bind(null,a)).then(g=>(p=g,o(p,a))).then(()=>p)}),r==="error"&&(s=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(p=>o(p,a))),e.registry[t].push({hook:s,orig:o})}function Mt(e,r,t){if(!e.registry[r])return;const s=e.registry[r].map(o=>o.orig).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}const kr=Function.bind,Pr=kr.bind(kr);function Br(e,r,t){const s=Pr(Mt,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{const i=t?[r,o,t]:[r,o];e[o]=e.api[o]=Pr(Ht,null).apply(null,i)})}function Wt(){const e=Symbol("Singular"),r={registry:{}},t=xe.bind(null,r,e);return Br(t,r,e),t}function Bt(){const e={registry:{}},r=xe.bind(null,e);return Br(r,e),r}const Vt={Singular:Wt,Collection:Bt};var zt="0.0.0-development",Kt=`octokit-endpoint.js/${zt} ${he()}`,Qt={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":Kt},mediaType:{format:""}};function Jt(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function Xt(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function Vr(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(s=>{Xt(r[s])?s in e?t[s]=Vr(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function Gr(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function Se(e,r,t){var o;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=Jt(t.headers),Gr(t),Gr(t.headers);const s=Vr(e||{},t);return t.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(i=>!s.mediaType.previews.includes(i)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),s}function Yt(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var Zt=/\{[^}]+\}/g;function es(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function rs(e){const r=e.match(Zt);return r?r.map(es).reduce((t,s)=>t.concat(s),[]):[]}function Or(e,r){const t={__proto__:null};for(const s of Object.keys(e))r.indexOf(s)===-1&&(t[s]=e[s]);return t}function zr(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function Q(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function Z(e,r,t){return r=e==="+"||e==="#"?zr(r):Q(r),t?Q(t)+"="+r:r}function K(e){return e!=null}function we(e){return e===";"||e==="&"||e==="?"}function ts(e,r,t,s){var o=e[t],i=[];if(K(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(Z(r,o,we(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(K).forEach(function(a){i.push(Z(r,a,we(r)?t:""))}):Object.keys(o).forEach(function(a){K(o[a])&&i.push(Z(r,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(K).forEach(function(p){a.push(Z(r,p))}):Object.keys(o).forEach(function(p){K(o[p])&&(a.push(Q(p)),a.push(Z(r,o[p].toString())))}),we(r)?i.push(Q(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?K(o)&&i.push(Q(t)):o===""&&(r==="&"||r==="?")?i.push(Q(t)+"="):o===""&&i.push("");return i}function ss(e){return{expand:os.bind(null,e)}}function os(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let p="";const g=[];if(t.indexOf(o.charAt(0))!==-1&&(p=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(m){var f=/([^:\*]*)(?::(\d+)|(\*))?/.exec(m);g.push(ts(r,p,f[1],f[2]||f[3]))}),p&&p!=="+"){var a=",";return p==="?"?a="&":p!=="#"&&(a=p),(g.length!==0?p:"")+g.join(a)}else return g.join(",")}else return zr(i)}),e==="/"?e:e.replace(/\/$/,"")}function Kr(e){var f;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=Or(e,["method","baseUrl","url","headers","request","mediaType"]);const a=rs(t);t=ss(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const p=Object.keys(e).filter(l=>a.includes(l)).concat("baseUrl"),g=Or(i,p);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(l=>l.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(f=e.mediaType.previews)!=null&&f.length)){const l=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=l.concat(e.mediaType.previews).map(k=>{const w=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${k}-preview${w}`}).join(",")}return["GET","HEAD"].includes(r)?t=Yt(t,g):"data"in g?o=g.data:Object.keys(g).length&&(o=g),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o>"u"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function ns(e,r,t){return Kr(Se(e,r,t))}function Qr(e,r){const t=Se(e,r),s=ns.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:Qr.bind(null,t),merge:Se.bind(null,t),parse:Kr})}var is=Qr(null,Qt);class ee extends Error{constructor(t,s,o){super(t);C(this,"name");C(this,"status");C(this,"request");C(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in o&&(this.response=o.response);const i=Object.assign({},o.request);o.request.headers.authorization&&(i.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var as="0.0.0-development",cs={headers:{"user-agent":`octokit-request.js/${as} ${he()}`}};function ls(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function Rr(e){var l,k,w,O,A;const r=((l=e.request)==null?void 0:l.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((k=e.request)==null?void 0:k.log)||console,s=((w=e.request)==null?void 0:w.parseSuccessResponseBody)!==!1,o=ls(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([v,y])=>[v,String(y)]));let a;try{a=await r(e.url,{method:e.method,body:o,redirect:(O=e.request)==null?void 0:O.redirect,headers:i,signal:(A=e.request)==null?void 0:A.signal,...e.body&&{duplex:"half"}})}catch(v){let y="Unknown Error";if(v instanceof Error){if(v.name==="AbortError")throw v.status=500,v;y=v.message,v.name==="TypeError"&&"cause"in v&&(v.cause instanceof Error?y=v.cause.message:typeof v.cause=="string"&&(y=v.cause))}const P=new ee(y,500,{request:e});throw P.cause=v,P}const p=a.status,g=a.url,m={};for(const[v,y]of a.headers)m[v]=y;const f={url:g,status:p,headers:m,data:""};if("deprecation"in m){const v=m.link&&m.link.match(/<([^>]+)>; rel="deprecation"/),y=v&&v.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${m.sunset}${y?`. See ${y}`:""}`)}if(p===204||p===205)return f;if(e.method==="HEAD"){if(p<400)return f;throw new ee(a.statusText,p,{response:f,request:e})}if(p===304)throw f.data=await ve(a),new ee("Not modified",p,{response:f,request:e});if(p>=400)throw f.data=await ve(a),new ee(us(f.data),p,{response:f,request:e});return f.data=s?await ve(a):a.body,f}async function ve(e){const r=e.headers.get("content-type");return/application\/json/.test(r)?e.json().catch(()=>e.text()).catch(()=>""):!r||/^text\/|charset=utf-8$/.test(r)?e.text():e.arrayBuffer()}function us(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function Fe(e,r){const t=e.defaults(r);return Object.assign(function(o,i){const a=t.merge(o,i);if(!a.request||!a.request.hook)return Rr(t.parse(a));const p=(g,m)=>Rr(t.parse(t.merge(g,m)));return Object.assign(p,{endpoint:t,defaults:Fe.bind(null,t)}),a.request.hook(p,a)},{endpoint:t,defaults:Fe.bind(null,t)})}var Ce=Fe(is,cs),ps="0.0.0-development";function ds(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var gs=class extends Error{constructor(r,t,s){super(ds(s));C(this,"name","GraphqlResponseError");C(this,"errors");C(this,"data");this.request=r,this.headers=t,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},hs=["method","baseUrl","url","headers","request","query","mediaType"],ms=["query","method","url"],Ar=/\/api\/v3\/?$/;function _s(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(ms.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((a,p)=>hs.includes(p)?(a[p]=s[p],a):(a.variables||(a.variables={}),a.variables[p]=s[p],a),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Ar.test(i)&&(o.url=i.replace(Ar,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const p={};for(const g of Object.keys(a.headers))p[g]=a.headers[g];throw new gs(o,p,a.data)}return a.data.data})}function qe(e,r){const t=e.defaults(r);return Object.assign((o,i)=>_s(t,o,i),{defaults:qe.bind(null,t),endpoint:t.endpoint})}qe(Ce,{headers:{"user-agent":`octokit-graphql.js/${ps} ${he()}`},method:"POST",url:"/graphql"});function fs(e){return qe(e,{method:"POST",url:"/graphql"})}var Es=/^v1\./,Ts=/^ghs_/,bs=/^ghu_/;async function ws(e){const r=e.split(/\./).length===3,t=Es.test(e)||Ts.test(e),s=bs.test(e);return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}function vs(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function ys(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=vs(e),r(o)}var ks=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(ws.bind(null,r),{hook:ys.bind(null,r)})};const Jr="6.1.2",Sr=()=>{},Ps=console.warn.bind(console),Gs=console.error.bind(console),Fr=`octokit-core.js/${Jr} ${he()}`;var ie;let Os=(ie=class{constructor(r={}){C(this,"request");C(this,"graphql");C(this,"log");C(this,"hook");C(this,"auth");const t=new Vt.Collection,s={baseUrl:Ce.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=r.userAgent?`${r.userAgent} ${Fr}`:Fr,r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=Ce.defaults(s),this.graphql=fs(this.request).defaults(s),this.log=Object.assign({debug:Sr,info:Sr,warn:Ps,error:Gs},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,p=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",p.hook),this.auth=p}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=ks(r.auth);t.wrap("request",i.hook),this.auth=i}const o=this.constructor;for(let i=0;i<o.plugins.length;++i)Object.assign(this,o.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...s){const o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var o;const t=this.plugins;return o=class extends this{},C(o,"plugins",t.concat(r.filter(i=>!t.includes(i)))),o}},C(ie,"VERSION",Jr),C(ie,"plugins",[]),ie);var Rs="0.0.0-development";function As(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const i=Object.keys(e.data)[0],a=e.data[i];return e.data=a,typeof t<"u"&&(e.data.incomplete_results=t),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function $e(e,r,t){const s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,i=s.method,a=s.headers;let p=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!p)return{done:!0};try{const g=await o({method:i,url:p,headers:a}),m=As(g);return p=((m.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:m}}catch(g){if(g.status!==409)throw g;return p="",{value:{status:200,headers:{},data:[]}}}}})}}function Xr(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),Yr(e,[],$e(e,r,t)[Symbol.asyncIterator](),s)}function Yr(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let i=!1;function a(){i=!0}return r=r.concat(s?s(o.value,a):o.value.data),i?r:Yr(e,r,t,s)})}Object.assign(Xr,{iterator:$e});function Zr(e){return{paginate:Object.assign(Xr.bind(null,e),{iterator:$e.bind(null,e)})}}Zr.VERSION=Rs;var Ss=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,Fs=class extends Error{constructor(r,t){super(Ss(r.pathInQuery,t));C(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Cs=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);C(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Us=e=>Object.prototype.toString.call(e)==="[object Object]";function et(e){const r=rt(e,"pageInfo");if(r.length===0)throw new Cs(e);return r}var rt=(e,r,t=[])=>{for(const s of Object.keys(e)){const o=[...t,s],i=e[s];if(i.hasOwnProperty(r))return o;if(Us(i)){const a=rt(i,r,o);if(a.length>0)return a}}return[]},re=(e,r)=>r.reduce((t,s)=>t[s],e),ye=(e,r,t)=>{const s=r[r.length-1],o=[...r].slice(0,-1),i=re(e,o);typeof t=="function"?i[s]=t(i[s]):i[s]=t},Ds=e=>{const r=et(e);return{pathInQuery:r,pageInfo:re(e,[...r,"pageInfo"])}},tt=e=>e.hasOwnProperty("hasNextPage"),Ls=e=>tt(e)?e.endCursor:e.startCursor,Is=e=>tt(e)?e.hasNextPage:e.hasPreviousPage,st=e=>(r,t={})=>{let s=!0,o={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const i=await e.graphql(r,o),a=Ds(i),p=Ls(a.pageInfo);if(s=Is(a.pageInfo),s&&p===o.cursor)throw new Fs(a,p);return o={...o,cursor:p},{done:!1,value:i}}})}},js=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=et(e),s=[...t,"nodes"],o=re(r,s);o&&ye(e,s,g=>[...g,...o]);const i=[...t,"edges"],a=re(r,i);a&&ye(e,i,g=>[...g,...a]);const p=[...t,"pageInfo"];return ye(e,p,re(r,p)),e},xs=e=>{const r=st(e);return async(t,s={})=>{let o={};for await(const i of r(t,s))o=js(o,i);return o}};function qs(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(xs(e),{iterator:st(e)})})}}const $s="13.2.4",Ns={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var Hs=Ns;const z=new Map;for(const[e,r]of Object.entries(Hs))for(const[t,s]of Object.entries(r)){const[o,i,a]=s,[p,g]=o.split(/ /),m=Object.assign({method:p,url:g},i);z.has(e)||z.set(e,new Map),z.get(e).set(t,{scope:e,methodName:t,endpointDefaults:m,decorations:a})}const Ms={has({scope:e},r){return z.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[...z.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];const o=z.get(r).get(s);if(!o)return;const{endpointDefaults:i,decorations:a}=o;return a?t[s]=Bs(e,r,s,i,a):t[s]=e.request.defaults(i),t[s]}};function Ws(e){const r={};for(const t of z.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},Ms);return r}function Bs(e,r,t,s,o){const i=e.request.defaults(s);function a(...p){let g=i.endpoint.merge(...p);if(o.mapToData)return g=Object.assign({},g,{data:g[o.mapToData],[o.mapToData]:void 0}),i(g);if(o.renamed){const[m,f]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${m}.${f}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const m=i.endpoint.merge(...p);for(const[f,l]of Object.entries(o.renamedParameters))f in m&&(e.log.warn(`"${f}" parameter is deprecated for "octokit.${r}.${t}()". Use "${l}" instead`),l in m||(m[l]=m[f]),delete m[f]);return i(m)}return i(...p)}return Object.assign(a,i)}function ot(e){return{rest:Ws(e)}}ot.VERSION=$s;var ke=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Vs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var nt={exports:{}};(function(e,r){(function(t,s){e.exports=s()})(ke,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof ke<"u"?ke:typeof self<"u"?self:{};function s(b){return b&&b.default||b}var o=function(b,c,n={}){var u,d,h;for(u in c)h=c[u],n[u]=(d=b[u])!=null?d:h;return n},i=function(b,c,n={}){var u,d;for(u in b)d=b[u],c[u]!==void 0&&(n[u]=d);return n},a={load:o,overwrite:i},p;p=class{constructor(c,n){this.incr=c,this.decr=n,this._first=null,this._last=null,this.length=0}push(c){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:c,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var c;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),c=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,c}first(){if(this._first!=null)return this._first.value}getArray(){var c,n,u;for(c=this._first,u=[];c!=null;)u.push((n=c,c=c.next,n.value));return u}forEachShift(c){var n;for(n=this.shift();n!=null;)c(n),n=this.shift()}debug(){var c,n,u,d,h;for(c=this._first,h=[];c!=null;)h.push((n=c,c=c.next,{value:n.value,prev:(u=n.prev)!=null?u.value:void 0,next:(d=n.next)!=null?d.value:void 0}));return h}};var g=p,m;m=class{constructor(c){if(this.instance=c,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,u)=>this._addListener(n,"many",u),this.instance.once=(n,u)=>this._addListener(n,"once",u),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(c,n,u){var d;return(d=this._events)[c]==null&&(d[c]=[]),this._events[c].push({cb:u,status:n}),this.instance}listenerCount(c){return this._events[c]!=null?this._events[c].length:0}async trigger(c,...n){var u,d;try{return c!=="debug"&&this.trigger("debug",`Event triggered: ${c}`,n),this._events[c]==null?void 0:(this._events[c]=this._events[c].filter(function(h){return h.status!=="none"}),d=this._events[c].map(async h=>{var _,T;if(h.status!=="none"){h.status==="once"&&(h.status="none");try{return T=typeof h.cb=="function"?h.cb(...n):void 0,typeof(T!=null?T.then:void 0)=="function"?await T:T}catch(G){return _=G,this.trigger("error",_),null}}}),(await Promise.all(d)).find(function(h){return h!=null}))}catch(h){return u=h,this.trigger("error",u),null}}};var f=m,l,k,w;l=g,k=f,w=class{constructor(c){this.Events=new k(this),this._length=0,this._lists=(function(){var n,u,d;for(d=[],n=1,u=c;1<=u?n<=u:n>=u;1<=u?++n:--n)d.push(new l(()=>this.incr(),()=>this.decr()));return d}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(c){return this._lists[c.options.priority].push(c)}queued(c){return c!=null?this._lists[c].length:this._length}shiftAll(c){return this._lists.forEach(function(n){return n.forEachShift(c)})}getFirst(c=this._lists){var n,u,d;for(n=0,u=c.length;n<u;n++)if(d=c[n],d.length>0)return d;return[]}shiftLastFrom(c){return this.getFirst(this._lists.slice(c).reverse()).shift()}};var O=w,A;A=class extends Error{};var v=A,y,P,x,L,q;L=10,P=5,q=a,y=v,x=class{constructor(c,n,u,d,h,_,T,G){this.task=c,this.args=n,this.rejectOnDrop=h,this.Events=_,this._states=T,this.Promise=G,this.options=q.load(u,d),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===d.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((U,D)=>{this._resolve=U,this._reject=D}),this.retryCount=0}_sanitizePriority(c){var n;return n=~~c!==c?P:c,n<0?0:n>L-1?L-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:c,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(c??new y(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(c){var n;if(n=this._states.jobStatus(this.options.id),!(n===c||c==="DONE"&&n===null))throw new y(`Invalid job status ${n}, expected ${c}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(c,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:c,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(c,n,u,d){var h,_,T;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),_={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",_);try{if(T=await(c!=null?c.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(_),await d(this.options,_),this._assertStatus("DONE"),this._resolve(T)}catch(G){return h=G,this._onFailure(h,_,n,u,d)}}doExpire(c,n,u){var d,h;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),h={args:this.args,options:this.options,retryCount:this.retryCount},d=new y(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(d,h,c,n,u)}async _onFailure(c,n,u,d,h){var _,T;if(u())return _=await this.Events.trigger("failed",c,n),_!=null?(T=~~_,this.Events.trigger("retry",`Retrying ${this.options.id} after ${T} ms`,n),this.retryCount++,d(T)):(this.doDone(n),await h(this.options,n),this._assertStatus("DONE"),this._reject(c))}doDone(c){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",c)}};var I=x,N,H,W;W=a,N=v,H=class{constructor(c,n,u){this.instance=c,this.storeOptions=n,this.clientId=this.instance._randomIndex(),W.load(u,u,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var c;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(c=this.heartbeat=setInterval(()=>{var n,u,d,h,_;if(h=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&h>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=h,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&h>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:d,reservoir:_}=this.storeOptions,this._lastReservoirIncrease=h,u=d!=null?Math.min(n,d-_):n,u>0))return this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?c.unref():void 0:clearInterval(this.heartbeat)}async __publish__(c){return await this.yieldLoop(),this.instance.Events.trigger("message",c.toString())}async __disconnect__(c){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(c=0){return new this.Promise(function(n,u){return setTimeout(n,c)})}computePenalty(){var c;return(c=this.storeOptions.penalty)!=null?c:15*this.storeOptions.minTime||5e3}async __updateSettings__(c){return await this.yieldLoop(),W.overwrite(c,c,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(c){return await this.yieldLoop(),this._nextRequest+this.timeout<c}computeCapacity(){var c,n;return{maxConcurrent:c,reservoir:n}=this.storeOptions,c!=null&&n!=null?Math.min(c-this._running,n):c!=null?c-this._running:n??null}conditionsCheck(c){var n;return n=this.computeCapacity(),n==null||c<=n}async __incrementReservoir__(c){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=c,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(c){return this._unblockTime>=c}check(c,n){return this.conditionsCheck(c)&&this._nextRequest-n<=0}async __check__(c){var n;return await this.yieldLoop(),n=Date.now(),this.check(c,n)}async __register__(c,n,u){var d,h;return await this.yieldLoop(),d=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),h=Math.max(this._nextRequest-d,0),this._nextRequest=d+h+this.storeOptions.minTime,{success:!0,wait:h,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(c,n){var u,d,h;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new N(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return d=Date.now(),h=this.storeOptions.highWater!=null&&c===this.storeOptions.highWater&&!this.check(n,d),u=this.strategyIsBlock()&&(h||this.isBlocked(d)),u&&(this._unblockTime=d+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:h,blocked:u,strategy:this.storeOptions.strategy}}async __free__(c,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var j=H,B,He;B=v,He=class{constructor(c){this.status=c,this._jobs={},this.counts=this.status.map(function(){return 0})}next(c){var n,u;if(n=this._jobs[c],u=n+1,n!=null&&u<this.status.length)return this.counts[n]--,this.counts[u]++,this._jobs[c]++;if(n!=null)return this.counts[n]--,delete this._jobs[c]}start(c){var n;return n=0,this._jobs[c]=n,this.counts[n]++}remove(c){var n;return n=this._jobs[c],n!=null&&(this.counts[n]--,delete this._jobs[c]),n!=null}jobStatus(c){var n;return(n=this.status[this._jobs[c]])!=null?n:null}statusJobs(c){var n,u,d,h,_;if(c!=null){if(u=this.status.indexOf(c),u<0)throw new B(`status must be one of ${this.status.join(", ")}`);d=this._jobs,h=[];for(n in d)_=d[n],_===u&&h.push(n);return h}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((c,n,u)=>(c[this.status[u]]=n,c),{})}};var ut=He,Me,We;Me=g,We=class{constructor(c,n){this.schedule=this.schedule.bind(this),this.name=c,this.Promise=n,this._running=0,this._queue=new Me}isEmpty(){return this._queue.length===0}async _tryToRun(){var c,n,u,d,h,_,T;if(this._running<1&&this._queue.length>0)return this._running++,{task:T,args:c,resolve:h,reject:d}=this._queue.shift(),n=await async function(){try{return _=await T(...c),function(){return h(_)}}catch(G){return u=G,function(){return d(u)}}}(),this._running--,this._tryToRun(),n()}schedule(c,...n){var u,d,h;return h=d=null,u=new this.Promise(function(_,T){return h=_,d=T}),this._queue.push({task:c,args:n,resolve:h,reject:d}),this._tryToRun(),u}};var pt=We,Be="2.19.5",dt={version:Be},gt=Object.freeze({version:Be,default:dt}),Ve=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),ze=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),ht=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ke,Qe,Je,Xe,Ye,oe;oe=a,Ke=f,Xe=Ve,Je=ze,Ye=ht,Qe=(function(){class b{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,oe.load(this.limiterOptions,this.defaults,this),this.Events=new Ke(this),this.instances={},this.Bottleneck=lr,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new Xe(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new Je(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var u;return(u=this.instances[n])!=null?u:(()=>{var d;return d=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",d,n),d})()}async deleteKey(n=""){var u,d;return d=this.instances[n],this.connection&&(u=await this.connection.__runCommand__(["del",...Ye.allKeys(`${this.id}-${n}`)])),d!=null&&(delete this.instances[n],await d.disconnect()),d!=null||u>0}limiters(){var n,u,d,h;u=this.instances,d=[];for(n in u)h=u[n],d.push({key:n,limiter:h});return d}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,u,d,h,_,T,G,U,D;if(this.connection==null)return this.Promise.resolve(this.keys());for(T=[],n=null,D=`b_${this.id}-`.length,u=9;n!==0;)for([U,d]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~U,h=0,G=d.length;h<G;h++)_=d[h],T.push(_.slice(D,-u));return T}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var u,d,h,_,T,G;T=Date.now(),h=this.instances,_=[];for(d in h){G=h[d];try{await G._store.__groupCheck__(T)?_.push(this.deleteKey(d)):_.push(void 0)}catch(U){u=U,_.push(G.Events.trigger("error",u))}}return _},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(oe.overwrite(n,this.defaults,this),oe.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var u;if(!this.sharedConnection)return(u=this.connection)!=null?u.disconnect(n):void 0}}return b.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},b}).call(t);var mt=Qe,Ze,er,rr;rr=a,er=f,Ze=(function(){class b{constructor(n={}){this.options=n,rr.load(this.options,this.defaults,this),this.Events=new er(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,u)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var u;return this._arr.push(n),u=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),u}}return b.prototype.defaults={maxTime:null,maxSize:null,Promise},b}).call(t);var _t=Ze,ft=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Et=s(gt),tr,sr,me,_e,or,fe,nr,ir,ar,Ee,$,cr=[].splice;fe=10,sr=5,$=a,nr=O,_e=I,or=j,ir=ft,me=f,ar=ut,Ee=pt,tr=(function(){class b{constructor(n={},...u){var d,h;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,u),$.load(n,this.instanceDefaults,this),this._queues=new nr(fe),this._scheduled={},this._states=new ar(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new me(this),this._submitLock=new Ee("submit",this.Promise),this._registerLock=new Ee("register",this.Promise),h=$.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return d=$.load(n,this.redisStoreDefaults,{}),new ir(this,h,d);if(this.datastore==="local")return d=$.load(n,this.localStoreDefaults,{}),new or(this,h,d);throw new b.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var _;return(_=this._store.heartbeat)!=null&&typeof _.ref=="function"?_.ref():void 0}),this._queues.on("zero",()=>{var _;return(_=this._store.heartbeat)!=null&&typeof _.unref=="function"?_.unref():void 0})}_validateOptions(n,u){if(!(n!=null&&typeof n=="object"&&u.length===0))throw new b.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,u,d,h){var _,T;try{if({running:T}=await this._store.__free__(n,d.weight),this.Events.trigger("debug",`Freed ${d.id}`,h),T===0&&this.empty())return this.Events.trigger("idle")}catch(G){return _=G,this.Events.trigger("error",_)}}_run(n,u,d){var h,_,T;return u.doRun(),h=this._clearGlobalState.bind(this,n),T=this._run.bind(this,n,u),_=this._free.bind(this,n,u),this._scheduled[n]={timeout:setTimeout(()=>u.doExecute(this._limiter,h,T,_),d),expiration:u.options.expiration!=null?setTimeout(function(){return u.doExpire(h,T,_)},d+u.options.expiration):void 0,job:u}}_drainOne(n){return this._registerLock.schedule(()=>{var u,d,h,_,T;return this.queued()===0?this.Promise.resolve(null):(T=this._queues.getFirst(),{options:_,args:u}=h=T.first(),n!=null&&_.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${_.id}`,{args:u,options:_}),d=this._randomIndex(),this._store.__register__(d,_.weight,_.expiration).then(({success:G,wait:U,reservoir:D})=>{var Y;return this.Events.trigger("debug",`Drained ${_.id}`,{success:G,args:u,options:_}),G?(T.shift(),Y=this.empty(),Y&&this.Events.trigger("empty"),D===0&&this.Events.trigger("depleted",Y),this._run(d,h,U),this.Promise.resolve(_.weight)):this.Promise.resolve(null)})))})}_drainAll(n,u=0){return this._drainOne(n).then(d=>{var h;return d!=null?(h=n!=null?n-d:n,this._drainAll(h,u+d)):this.Promise.resolve(u)}).catch(d=>this.Events.trigger("error",d))}_dropAllQueued(n){return this._queues.shiftAll(function(u){return u.doDrop({message:n})})}stop(n={}){var u,d;return n=$.load(n,this.stopDefaults),d=h=>{var _;return _=()=>{var T;return T=this._states.counts,T[0]+T[1]+T[2]+T[3]===h},new this.Promise((T,G)=>_()?T():this.on("done",()=>{if(_())return this.removeAllListeners("done"),T()}))},u=n.dropWaitingJobs?(this._run=function(h,_){return _.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var h,_,T;_=this._scheduled;for(h in _)T=_[h],this.jobStatus(T.job.options.id)==="RUNNING"&&(clearTimeout(T.timeout),clearTimeout(T.expiration),T.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),d(0)}))):this.schedule({priority:fe-1,weight:0},()=>d(1)),this._receive=function(h){return h._reject(new b.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new b.prototype.BottleneckError("stop() has already been called")),u}async _addToQueue(n){var u,d,h,_,T,G,U;({args:u,options:_}=n);try{({reachedHWM:T,blocked:d,strategy:U}=await this._store.__submit__(this.queued(),_.weight))}catch(D){return h=D,this.Events.trigger("debug",`Could not queue ${_.id}`,{args:u,options:_,error:h}),n.doDrop({error:h}),!1}return d?(n.doDrop(),!0):T&&(G=U===b.prototype.strategy.LEAK?this._queues.shiftLastFrom(_.priority):U===b.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(_.priority+1):U===b.prototype.strategy.OVERFLOW?n:void 0,G!=null&&G.doDrop(),G==null||U===b.prototype.strategy.OVERFLOW)?(G==null&&n.doDrop(),T):(n.doQueue(T,d),this._queues.push(n),await this._drainAll(),T)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new b.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var u,d,h,_,T,G,U;return typeof n[0]=="function"?(T=n,[d,...n]=T,[u]=cr.call(n,-1),_=$.load({},this.jobDefaults)):(G=n,[_,d,...n]=G,[u]=cr.call(n,-1),_=$.load(_,this.jobDefaults)),U=(...D)=>new this.Promise(function(Y,bt){return d(...D,function(...ur){return(ur[0]!=null?bt:Y)(ur)})}),h=new _e(U,n,_,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),h.promise.then(function(D){return typeof u=="function"?u(...D):void 0}).catch(function(D){return Array.isArray(D)?typeof u=="function"?u(...D):void 0:typeof u=="function"?u(D):void 0}),this._receive(h)}schedule(...n){var u,d,h;return typeof n[0]=="function"?([h,...n]=n,d={}):[d,h,...n]=n,u=new _e(h,n,d,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(u),u.promise}wrap(n){var u,d;return u=this.schedule.bind(this),d=function(...h){return u(n.bind(this),...h)},d.withOptions=function(h,..._){return u(h,n,..._)},d}async updateSettings(n={}){return await this._store.__updateSettings__($.overwrite(n,this.storeDefaults)),$.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return b.default=b,b.Events=me,b.version=b.prototype.version=Et.version,b.strategy=b.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},b.BottleneckError=b.prototype.BottleneckError=v,b.Group=b.prototype.Group=mt,b.RedisConnection=b.prototype.RedisConnection=Ve,b.IORedisConnection=b.prototype.IORedisConnection=ze,b.Batcher=b.prototype.Batcher=_t,b.prototype.jobDefaults={priority:sr,weight:1,expiration:null,id:"<no-id>"},b.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:b.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},b.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},b.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},b.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},b.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},b}).call(t);var lr=tr,Tt=lr;return Tt})})(nt);var zs=nt.exports;const it=Vs(zs);async function at(e,r,t,s){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const o=s.request.retries!=null?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,o,i)}throw t}async function Ks(e,r,t,s){const o=new it;return o.on("failed",function(i,a){const p=~~i.request.request.retries,g=~~i.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,p>a.retryCount)return g*e.retryAfterBaseValue}),o.schedule(Qs.bind(null,e,r,t),s)}async function Qs(e,r,t,s){const o=await t(t,s);if(o.data&&o.data.errors&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const i=new ee(o.data.errors[0].message,500,{request:s,response:o});return at(e,r,i,s)}return o}var Js="0.0.0-development";function ct(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",at.bind(null,t,e)),e.hook.wrap("request",Ks.bind(null,t,e))),{retry:{retryRequest:(s,o,i)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:i}),s)}}}ct.VERSION=Js;var Xs="0.0.0-development",Pe=()=>Promise.resolve();function Ys(e,r,t){return e.retryLimiter.schedule(Zs,e,r,t)}async function Zs(e,r,t){const s=t.method!=="GET"&&t.method!=="HEAD",{pathname:o}=new URL(t.url,"http://github.test"),i=t.method==="GET"&&o.startsWith("/search/"),a=o.startsWith("/graphql"),g=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(g.expiration=1e3*60),(s||a)&&await e.write.key(e.id).schedule(g,Pe),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(g,Pe),i&&await e.search.key(e.id).schedule(g,Pe);const m=e.global.key(e.id).schedule(g,r,t);if(a){const f=await m;if(f.data.errors!=null&&f.data.errors.some(l=>l.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:f,data:f.data})}return m}var eo=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function ro(e){const t=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var Cr=ro(eo),lt=Cr.test.bind(Cr),J={},to=function(e,r){J.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),J.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),J.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),J.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function Ne(e,r){const{enabled:t=!0,Bottleneck:s=it,id:o="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const p={connection:a,timeout:i};J.global==null&&to(s,p);const g=Object.assign({clustering:a!=null,triggersNotification:lt,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...J},r.throttle);if(typeof g.onSecondaryRateLimit!="function"||typeof g.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const m={},f=new s.Events(m);return m.on("secondary-limit",g.onSecondaryRateLimit),m.on("rate-limit",g.onRateLimit),m.on("error",l=>e.log.warn("Error in throttling-plugin limit handler",l)),g.retryLimiter.on("failed",async function(l,k){const[w,O,A]=k.args,{pathname:v}=new URL(A.url,"http://github.test");if(!(v.startsWith("/graphql")&&l.status!==401||l.status===403))return;const P=~~O.retryCount;O.retryCount=P,A.request.retryCount=P;const{wantRetry:x,retryAfter:L=0}=await async function(){var q;if(/\bsecondary rate\b/i.test(l.message)){const I=Number(l.response.headers["retry-after"])||w.fallbackSecondaryRateRetryAfter;return{wantRetry:await f.trigger("secondary-limit",I,A,e,P),retryAfter:I}}if(l.response.headers!=null&&l.response.headers["x-ratelimit-remaining"]==="0"||(((q=l.response.data)==null?void 0:q.errors)??[]).some(I=>I.type==="RATE_LIMITED")){const I=new Date(~~l.response.headers["x-ratelimit-reset"]*1e3).getTime(),N=Math.max(Math.ceil((I-Date.now())/1e3)+1,0);return{wantRetry:await f.trigger("rate-limit",N,A,e,P),retryAfter:N}}return{}}();if(x)return O.retryCount++,L*w.retryAfterBaseValue}),e.hook.wrap("request",Ys.bind(null,g)),{}}Ne.VERSION=Xs;Ne.triggersNotification=lt;var so="0.0.0-development",oo=Os.plugin(ot,Zr,qs,ct,Ne).defaults({userAgent:`octokit.js/${so}`,throttle:{onRateLimit:no,onSecondaryRateLimit:io}});function no(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function io(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}const ao="/assets/1-DuaXlMpf.png",co="/assets/2-kiqolmfa.png",lo="/assets/3-CXMU2Qok.png",uo="/assets/4-ChKhW6zv.png",po="/assets/5-sAmXbGbH.png";function go(){let e=[ao,co,lo,uo,po];const[r,t]=be(0),s=Ut(null),[o,i]=be({Windows:"",Mac:"",other:"https://github.com/cardo-podcast/cardo/releases/latest/"}),[a,p]=be("other"),g=async()=>{const f=await new oo({auth:void 0}).request("GET /repos/cardo-podcast/cardo/releases/latest",{owner:"OWNER",repo:"REPO",headers:{"X-GitHub-Api-Version":"2022-11-28"}}),l={...o};for(const k of f.data.assets)k.name.endsWith(".msi")?l.Windows=k.browser_download_url:k.name.endsWith(".dmg")&&(l.Mac=k.browser_download_url);i(l)};return Ct(()=>{document.title="Cardo",navigator.userAgent.includes("Win")?p("Windows"):navigator.userAgent.includes("Mac")&&p("Mac"),g()},[]),E("div",{className:`w-full text-zinc-100 flex items-center flex-col 
    lg:flex-row gap-6 lg:justify-evenly h-full pt-2 overflow-auto
    bg-gradient-to-t lg:bg-gradient-to-l from from-purple-950 to-70% to-zinc-900
    `,children:[E("div",{className:"flex flex-col items-center gap-1",children:[E("img",{className:"w-20 cursor-pointer hover:p-1",title:"Open Github Repo",src:"https://raw.githubusercontent.com/cardo-podcast/cardo/master/src-tauri/icons/icon.png",onClick:()=>open("https://github.com/cardo-podcast/cardo/")}),E("h1",{className:"text-2xl md:text-4xl lg:text-5xl text-nowrap mb-2 lg:mb-5",children:"Cardo podcast client"}),E("div",{className:"flex items-center rounded-md overflow-hidden",children:[E("button",{className:"flex items-center gap-1 bg-purple-700 pr-2 hover:bg-purple-600 h-12",title:a=="other"?"Go to releases page":"Download latest release for "+a,onClick:()=>{open(o[a])},children:[E("span",{className:"w-10 p-1",children:a=="Windows"?qt:a=="Mac"?$t:yr}),E("p",{className:"text-lg",children:"DOWNLOAD"})]}),a!="other"&&E("button",{className:"flex items-center bg-purple-900 hover:bg-purple-800 h-12",title:"Go to releases page",onClick:()=>open(o.other),children:E("span",{className:"w-10 p-1",children:yr})})]})]}),E("div",{className:"group relative w-5/6 lg:w-2/5",children:[E("div",{className:"opacity-0 group-hover:opacity-100 transition-opacity absolute w-full top-1/2 -translate-y-1/2 flex justify-between h-1/2",children:[E("button",{className:"bg-purple-500 w-1/12 rounded-r-full opacity-60 hover:opacity-90 transition-opacity",onClick:()=>{s.current&&(s.current.scrollLeft-=s.current.scrollWidth/e.length,t(Math.max(0,r-1)))},children:jt}),E("button",{className:"bg-purple-500 w-1/12 rounded-l-full opacity-60 hover:opacity-90 transition-opacity duration-200",onClick:()=>{s.current&&(s.current.scrollLeft+=s.current.scrollWidth/e.length,t(Math.min(e.length-1,r+1)))},children:xt})]}),E("div",{className:"flex overflow-x-auto snap-x snap-mandatory scroll-smooth shadow-lg shadow-zinc-950",ref:s,children:e.map(m=>E("img",{className:"shrink-0 snap-always snap-center",src:m}))}),E("div",{className:"absolute flex opacity-0 group-hover:opacity-100 bottom-0 left-1/2 -translate-x-1/2 gap-3",children:e.map((m,f)=>E("div",{className:`border-1 border-purple-900 w-[10px] h-[10px] rounded-full
                ${r==f?"bg-purple-700":"bg-zinc-100"}`}))})]})]})}function ho(){return E("div",{className:"w-full h-full bg-zinc-900 pt-10 font-sans overflow-y-auto scroll-smooth",children:[E("div",{className:"absolute top-0 w-full h-12 bg-zinc-950 flex justify-between px-3 py-1",children:[E("div",{className:"relative group",children:[E("div",{className:`absolute z-10 h-10 w-48 bg-yellow-400 items-center rounded-md py-1 px-2 flex group-hover:-translate-x-52
          transition-transform duration-300`,children:[E("span",{className:"w-8",children:Nt}),E("p",{className:"font-medium cursor-default",children:"DO YOU LIKE THIS?"})]}),E("div",{className:"gap-1 flex h-10",children:[E("a",{href:"https://www.buymeacoffee.com/n0vella",target:"_blank",children:E("img",{src:"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png",alt:"Buy Me A Coffee",className:"h-10"})}),E("a",{href:"https://www.paypal.com/paypalme/adriannovella",target:"_blank",children:E("img",{src:"https://www.paypalobjects.com/webstatic/icon/pp196.png",alt:"Paypal",className:"h-10 rounded-md"})})]})]}),E("a",{href:"https://github.com/cardo-podcast",target:"_blank",className:" contents",children:E("img",{className:"rounded-full hover:mix-blend-plus-lighter",title:"Open Github profile",src:"https://avatars.githubusercontent.com/u/177157984",alt:"Profile picture"})})]}),E("div",{className:"fixed flex justify-center items-start w-full h-full top-12",children:E(go,{})})]})}At(E(ho,{}),document.getElementById("app"));
